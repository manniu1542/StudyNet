<!-- Help-Admin-Strings.strings - For ease of localization, strings have been separated into this file.  Place all localizable strings here. -->
<!-- NOTE: assignments require left justification and the assignment to appear as "$=" without whitespace between the $ and =. -->

<!-- External links reused throughout the help documentation -->
$LINK_PRODUCT_HOME$=<a href="http://www.Serv-U.com/" target="_blank">http://www.Serv-U.com/</a>
$LINK_PRODUCT_SALES$=<a href="http://www.Serv-U.com/sales/" target="_blank">http://www.Serv-U.com/sales/</a>
$LINK_PRODUCT_SUPPORT$=<a href="http://www.Serv-U.com/support/" target="_blank">http://www.Serv-U.com/support/</a>
$LINK_PRODUCT_HELP_DESK$=<a href="http://www.Serv-U.com/prodsupport" target="_blank">Serv-U Help Desk</a>
$LINK_PRODUCT_KB$=<a href="http://www.Serv-U.com/kb/" target="_blank">http://www.Serv-U.com/kb/</a>
$LINK_PRODUCT_PURCHASE$=<a href="http://www.Serv-U.com/purchase/" target="_blank">http://www.Serv-U.com/purchase/</a>
$LINK_PRODUCT_PRICING$=<a href="http://www.Serv-U.com/pricing/" target="_blank">http://www.Serv-U.com/pricing/</a>
$LINK_CUSTOMER_SERVICE$=<a href="http://www.RhinoSoft.com/customer/" target="_blank">RhinoSoft.com Online Customer Service Center</a>
$LINK_DNS4ME$=<a href="http://www.DNS4Me.com/" target="_blank">DNS4Me</a>
$RHINOSOFT_CONTACT_INFO$::
<strong>RhinoSoft.com<br />
P.O. Box 53<br />
Helenville, WI 53137<br />
U.S.A.<br />

Sales: +1 (262) 560-9627<br />
Phone: +1 (262) 560-9627<br />
FAX: +1 (262) 560-9628<br />
</strong>$LINK_PRODUCT_HOME$<br />
$LINK_PRODUCT_SALES$<br />
$LINK_PRODUCT_SUPPORT$<br />
::END


<!-- Macros for inserting links to other Help doc pages.  The text within these anchor tags needs to be translated. -->
$LINK_HELP_EDITIONS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-ServU-Editions.htm">Serv-U Editions</a>
$LINK_HELP_UIC$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-UIC-Info.htm">User Interface Conventions</a>
$LINK_HELP_RATIOS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-User-Quotas-Ratios.htm">Transfer Ratios</a>
$LINK_HELP_SYSTEM_VARS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-System-Variables.htm">System Variables</a>
$LINK_HELP_LOG_SETTINGS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-Configure-Logs.htm">Domain Log Settings</a>
$LINK_HELP_GUIDE$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-Quick-Start.htm">Quick Start Guide</a>
$LINK_HELP_VIRTUAL$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-Virtual-Hosts.htm">Virtual Host</a>
$LINK_HELP_DIRACCESS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-Directory-Access.htm">Directory Access Rules</a>
$LINK_HELP_USER_LIMITS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-Limits-Settings-User.htm">Password Limits</a>
$LINK_HELP_GROUPS$=<a href="/?InternalDir=Admin&InternalFile=Help/Help-About-Groups.htm">Groups</a>


<!-- String table for Help-Overview -->
$OVERVIEW_HEADER$=Serv-U File Server Overview

$OVERVIEW1$::
Welcome to the Serv-U File Server!

The Serv-U File Server is a multi-protocol file server capable of sending and receiving files from other networked computers through various 
means.  Administrators create accounts for users that allow access to specific files and folders on the server's hard drive or any other 
available network resource.  These access permissions define where and how the users can access the available resources.  Serv-U's 
multi-protocol support means that users can employ whatever access method is available to them when connecting to your server.  The Serv-U 
File Server supports the following protocols:
::END

$OVERVIEW1_FUTURE_FEATURE$::
Welcome to the Serv-U File Server!

The Serv-U File Server is a multi-protocol file server capable of sending and receiving files from other networked computers through various 
means. Administrators create accounts for users that allow access to specific files and folders on the server's hard drive or any other 
available network resource. These access permissions define where and how the users can access the available resources. Serv-U's multi-protocol 
support means that users can employ whatever access method is available to them when connecting to your server. In addition, Serv-U supports both 
IPv4 and IPv6 for next-generation networks. The Serv-U File Server supports the following protocols:
::END

$OVERVIEW_PROTOCOLS$::
FTP (File Transfer Protocol)
HTTP (Hyper Text Transfer Protocol)
FTPS (FTP over SSL)*
HTTPS (HTTP over SSL)**
SFTP using SSH2 (File Transfer over Secure Shell)**
::END

$OVERVIEW_EDITION_NOTE$::
* - Requires Serv-U Gold or Silver Edition <br />
** - Requires Serv-U Gold Edition
::END

$OVERVIEW2$::
In addition to Serv-U's excellent support for a large collection of the most popular FTP clients, you can now use your favorite web browser or SSH client to
connect and transfer files to and from Serv-U.  Server administrators looking to provide a full-featured FTP client to users that may not have an FTP client
license of their own can even license FTP Voyager JV - a Java enabled FTP client delivered to the user after logging in to their Serv-U account.  For more 
information on licensing <a href="http://www.Serv-U.com/Web-FTP-Client.asp" target="_blank">FTP Voyager JV, click here</a>.

The Serv-U File Server maintains the Serv-U brand's legendary feature set and continues to raise the bar for file servers by enabling you to:
::END

$OVERVIEW_LIST$::
Access files from anywhere
Share files with friends, family, and clientèle
Provide employees in the field with a central location to send and receive data files
Full group support that streamlines user creation and maintenance
View images in thumbnails and slide shows, generated on-the-fly to minimize bandwidth usage
Administer the server through a custom-built web interface
Chat with FTP clients and view session logs in real time
Customize FTP command responses
Create custom limits and rules at an extremely granular level to control resource usage on the server
Connect securely using SSL/TLS or SSH2
Use 3rd party digital certificates to guarantee the server's identity to clients
Host multiple domains on the same IP address and port
Utilize multiple sources of authentication on the same domain (local user database, NT/SAM, ODBC)
Automatically build the tables necessary for ODBC authentication
...and much more!
::END

$OVERVIEW3$::
Serv-U is trialware that functions as the unlimited "Gold Edition" for 30 days.  Registration entitles you to 1 year of free software updates (upgrade protection) and free email technical support.  Licenses
are also available at a discounted price that extends the upgrade protection coverage to 2 years.
::END


<!-- String table for Help-ServU-Editions -->
$SERVU_EDITIONS_HEADER$=Serv-U Editions

$SERVU_EDITION_INTRO$::
The Serv-U File Server is available in three different versions designed to meet the various needs of today's server administrators.  RhinoSoft.com
offers a <strong>Bronze Edition</strong> with the core tools and features, a <strong>Silver Edition</strong> which adds support for FTPS(SSL) and Virtual Hosts, and a <strong>Gold Edition</strong> that offers an enterprise feature-set
designed for use by medium to large corporations with high volume file server traffic.
::END

$SERVU_BRONZE_HEADER$=Serv-U Bronze Edition

$SERVU_BRONZE_BODY1$::
Serv-U Bronze Edition offers a robust feature set with all the tools for managing and transferring files:
::END

$SERVU_BRONZE_LIST$::
One domain with twenty-five concurrent connections
Fifty user accounts
Support for HTTP Web Client
Support for virtual path mapping
Support for transfer ratios and quotas 
::END

$SERVU_SILVER_HEADER$=Serv-U Silver Edition

$SERVU_SILVER_BODY$::
Serv-U Silver Edition extends the capabilities of the Bronze Edition by adding:
::END

$SERVU_SILVER_LIST$::
Three domains with 100 concurrent connections
250 user accounts
Support for encrypted FTPS connections
Support for Virtual Hosts
User Password Recovery via HTTP login page
::END

$SERVU_SILVER_LIST_OLD$::
Three domains with 100 concurrent connections
250 user accounts
Support for encrypted FTPS connections
Support for Virtual Hosts
::END

$SERVU_GOLD_HEADER$=Serv-U Gold Edition

$SERVU_GOLD_BODY$::
Serv-U Gold Edition addresses the need for an enterprise file server with no limitations and the ability to continue growing with your business. 
In addition to the encrypted FTPS support in the Silver Edition, Serv-U Gold Edition adds SSH and HTTPS support.  With this in mind, Serv-U
Gold Edition has the following additional capabilities:
::END

$SERVU_GOLD_LIST$::
Unlimited domains with an unlimited number of concurrent connections 
Unlimited number of user accounts 
FIPS 140-2 support, certified through OpenSSL (Certificate #1051)
Support for Custom HTTP Logo
Support for User and Group Statistics
Support for encrypted HTTPS connections
SFTP using SSH2 (File Transfer over Secure Shell)
Support for remote administration of multiple servers from a single location 
Support for ODBC database storage of user and group accounts
Support for NT-SAM / Active Directory based user accounts
Support for email, external program, and balloon tip events
::END

$SERVU_GOLD_LIST_OLD$::
Unlimited domains with an unlimited number of concurrent connections 
Unlimited number of user accounts 
Support for Custom HTTP Logo
Support for User and Group Statistics
Support for encrypted HTTPS connections
SFTP using SSH2 (File Transfer over Secure Shell)
Support for remote administration of multiple servers from a single location 
Support for ODBC database storage of user and group accounts
Support for NT-SAM / Active Directory based user accounts
Support for email, external program, and balloon tip events
::END

$SERVU_EDITIONS_LINK_INFO$=<a href="http://www.Serv-U.com/" target="_blank">Click here</a> for more information about the three editions of the Serv-U File Server.


<!-- String table for Help-How-To-Purchase -->
$HOW_TO_PURCHASE_HEADER$=How To Purchase Serv-U

$HOWTOPURCHASE$::
Serv-U is available as a fully functional Gold Edition trial for 30 days after the date of initial installation. In order to continue using Serv-U with 
its full set of features, a Serv-U license must be purchased.

A license can be purchased online at $LINK_PRODUCT_PURCHASE$.  Simply choose which Edition of the Serv-U File Server is required and the quantity to purchase
(discount pricing applies for bulk purchasing).  A Serv-U File Server license must be purchased before adding an FTP Voyager JV license to your shopping cart.
Licenses of FTP Voyager (our premier FTP client software) may also be bundled at the time of purchase at a substantial discount.

Pricing information can be found at: $LINK_PRODUCT_PRICING$.

If you have lost your registration ID, it can be retrieved at: $LINK_CUSTOMER_SERVICE$.

Once the purchase has been completed, an email containing the registration details is immediately sent. If it is not received within an hour, check your
Spam filter to make sure that the email has not been filtered. Occasionally, the .reg installation file attached to our messages is blocked.  If this should
happen, simply register using the "Register Manually" directions in the email.
::END

$PO_ORDER_HEADER$=Ordering By PO

$ORDERING_BY_PO1$::
Purchase orders can be sent to RhinoSoft.com in one of three ways:
::END

$POORDERLIST1$::
E-Mail PO (PDF/JPG/GIF Format Preferred) to a Sales Representative at $LINK_PRODUCT_SALES$.
Fax PO to +1 (262) 560-9628
Mail directly to RhinoSoft.com
::END

$RHINO_MAILING_ADDRESS$::
<strong>RhinoSoft.com<br />
P.O. Box 53<br />
Helenville, WI 53137<br />
U.S.A.</strong>
::END


<!-- String table for Help-Contact-Tech -->
$TECHNICAL_SUPPORT_HEADER$=Technical Support

$TS_INTRO$::
Have a question and need more help? RhinoSoft.com offers a variety of technical support options.  For current product support policies, please refer to the
$LINK_PRODUCT_HELP_DESK$.

Users who purchased their copy of Serv-U from an Official RhinoSoft.com reseller are referred back to their reseller for support. Telephone technical
support is available.  Information on pricing for telephone technical support, including the minimum phone support charge, can be found at the
$LINK_PRODUCT_HELP_DESK$.  Premium Support Contracts are also available, which includes priority
email technical support and covers 5 telephone technical support incidents.

If you have lost your registration ID, please visit the $LINK_CUSTOMER_SERVICE$.
::END

$TS_FREE_EMAIL$=Free Email Support
$TS_FREE_EMAIL_INFO$::
Free technical support is available via email to all users.  RhinoSoft.com asks that all users submit their inquiries to $LINK_PRODUCT_SUPPORT$ for technical
support requests. 
::END

$TS_KNOWLEDGE_BASE$=Knowledge Base
$TS_KNOWLEDGE_BASE_INFO$::
Our Knowledge Base is a dynamic support tool that you can use to research solutions to your questions and problems.  Nearly every technical question posed to
our technical support team is answered here.   The Knowledge Base can provide immediate, informative, step-by-step answers with screenshots to your questions.

Visit $LINK_PRODUCT_KB$ to get answers now.
::END

$TS_SALES_SUPPORT$=Sales Support
$TS_SALES_SUPPORT_INFO$::
Sales questions (of a non-technical nature) relative to the Serv-U File Server software should be directed to: $LINK_PRODUCT_SALES$.   Sales representatives
can also be reached by calling RhinoSoft.com at +1 (262) 560-9627.

Technical Support options are subject to change without notice at the discretion of RhinoSoft.com
::END


<!-- String table for Help-Contact -->
$CONTACT_HEADER$=Contacting RhinoSoft.com

$CONTACT_INTRO$::
If you have lost your registration ID, please visit the $LINK_CUSTOMER_SERVICE$.

You may contact RhinoSoft.com by snail-mail at:
::END

$CONTACT_SALES$::
For sales inquiries, visit: $LINK_PRODUCT_SALES$.
::END

$CONTACT_PRODUCT_INFO$::
For more information on the Serv-U File Server, visit: $LINK_PRODUCT_HOME$.
::END


<!-- String table for Help-Quick-Start -->
$QUICK_START_HEADER$=Quick Start Guide

$QS_INTRODUCTION$::
Serv-U has been designed to be simple to configure with the flexibility and control you require to easily share files with others under the best security
possible.  This Quick Start Guide helps you install the server, create your first domain, and add a user account to the new domain.  Once you have
completed these simple steps, you will be able to connect to your new file server and start transferring files!
::END

$QS_INSTALLATION$=Installation
$QS_INSTALLATION_INFO$::
If you are installing Serv-U for the first time, simply follow the instructions on the installation screens to choose the install directory and configure any
desktop shortcuts for quickly accessing the server.  You may also choose to install Serv-U as a system service, meaning that Serv-U is automatically started
when Windows is started - before any user logs on to the machine.  This is useful if Serv-U is run on a dedicated server machine that doesn't regularly have
an interactive user session logged on to it.  If Serv-U is not installed as a system service, it needs to be manually started after logging in to Windows.

If Serv-U is being installed over an existing Serv-U installation, we recommend creating a back-up of your original installation folder first.  While Serv-U
can be safely installed over any existing installations and performs any necessary upgrades to data files and binaries, it is considered good data
management practice to backup critical components before upgrading them.  If the installation being upgraded is older than version 7.0, you are also 
prompted with a dialog pointing out some of the critical changes made after version 6 and how these changes affect your administration of the Serv-U File
Server.

Once installation is complete, the Serv-U Management Console is started.  If you chose not to have the Serv-U Management Console started after installation,
you can always launch it by double-clicking on the Serv-U icon in your system tray, or right-clicking it and selecting the "Start Management Console" option.
::END

$QS_FIRST_DOMAIN$=Creating Your First Domain
$QS_FIRST_DOMAIN_INFO$::
Once the Management Console has finished loading, you are prompted if you would like to create a new domain if no domains are currently present.  Clicking
<strong>Yes</strong> starts the domain creation wizard.  This wizard can be run at any time by clicking on the <strong>New Domain</strong> button found
at the top of the Management Console and in the <strong>Change Domain</strong> dialog, which is accessible from any page within the Management Console.
There are 3 simple steps to creating a new domain on your Serv-U File Server.

The first step is to provide a unique name for the domain.  The domain's name is not visible to any of its users nor does it affect how the domain is accessed
by others.  It is simply an identifier for the domain to make identification and management of the domain easier for its administrators.  The name must also be
unique so that Serv-U can distinguish it from other domains on the server.  You can also provide any other descriptive comments for the domain in the space
provided for the description.  By default, the domain is enabled and accessible to users.  If you would like this domain to be temporarily unavailable
to users while you are configuring it, uncheck the <strong>Enable Domain</strong> box.  Click <strong>Next</strong> to continue creating your domain.

The second step in creating a new domain is identifying the protocols this domain should use to provide access to its users.  The standard file sharing 
protocol is FTP (File Transfer Protocol) which operates on the default port of 21.  However, any of these ports can be changed to a value of your choosing.
It's a good idea to use a port above 1024 if you're going to run the server on a non-default port.  Please refer to the documentation on Serv-U Editions for
more information on which protocols are supported by each Serv-U Edition.  Check the boxes next to the protocols you want the domain to support before clicking
<strong>Next</strong> to continue.

The third step is to specify the physical address used to connect to this domain.  Normally, this is an IP address that users specify in order to
find your server on the Internet.  Most home users can leave this option blank, which tells Serv-U to use any available IP address on the computer.  
::END

$QS_FIRST_DOMAIN_ENCRYPT$::
The fourth and final step is to determine which encryption mode will be used when storing passwords on this domain.  By default, all passwords are stored
securely using one-way encryption, which locks away the password once it is saved.  However, when users are expected to take advantage of the "Password Recovery"
utility in the Web Client, it may be desirable to use two-way encryption so that Serv-U does not need to reset their passwords when password recovery is requested.
Finally, if the passwords should be stored in clear text Serv-U also allows passwords to be stored in clear text.  This is not recommended, but may be necessary for
integration with legacy systems (especially when using database support).
::END

$QS_FIRST_DOMAIN_DONE$::
Now, click <strong>Finish</strong> to have Serv-U create your first domain.  Congratulations!  You now have your first domain online.  There are
additional properties that can be configured for the domain at another time.  For more information on these options, see the documentation on
Domain Settings.  Now, you need to create a user account to start sharing files through this domain.
::END

$QS_FIRST_USER$=Creating Your First User Account
$QS_FIRST_USER_INFO$::
After your first domain is created, you are taken to the user's page of the Management Console and asked if you want to create a new user account with the new
user wizard.  Clicking <strong>Yes</strong> starts the new user account wizard.  This wizard can be run at any time by clicking on the "Wizard" button found on
the user account page.  There are 4 easy steps to creating a new user account.
::END

$QS_FIRST_USER_LOGIN_OLD$::
The first step is to provide a unique login ID for the account.  This login ID is used to begin the authentication process when connecting to the domain.
The login ID must be unique for this domain, however other domains on your server may have an account with the same login ID.  To create an anonymous
account, specify "anonymous" or "ftp" for the login ID.  Click <strong>Next</strong> to continue creating the user account.
::END

$QS_FIRST_USER_LOGIN$::
The first step is to provide a unique login ID for the account.  This login ID is used to begin the authentication process when connecting to the domain.
The login ID must be unique for this domain, however other domains on your server may have an account with the same login ID.  To create an anonymous
account, specify "anonymous" or "ftp" for the login ID.

At this time, a Full Name and an email address may also be specified for the user account. The Full Name provides a canonical name with which to refer to
the user account, and the email address allows Serv-U email notifications and recovered passwords to be sent to the user account.  Click
<strong>Next</strong> to continue creating the user account.
::END

$QS_FIRST_USER_PASSWORD$::
After specifying a unique login ID, you must also specify a password for the account.  The password is the second piece of information required to
authenticate a user when they connect to the domain.  In order for another person to connect to this domain, they must know the login ID specified in step 1,
and this password.  It is possible to leave this password blank, however that allows anyone who knows the login ID to access your domain.  Click
<strong>Next</strong> to continue.

The third step is specifying a home directory for the account.  The home directory is the location on the server's hard drive (or accessible network resource)
that the user account is placed in upon successful login.  Essentially, it's the location you want the user account to use when sending and receiving files
on the server.  Clicking the <strong>Browse</strong> button allows you to browse to a location on your hard drive, or it can be typed in manually.  If the user
is locked in their home directory, they are not able to access files or folders above the directory structure of their home directory.  Additionally, the
actual location of their home directory is masked and displayed as "/".  Click the <strong>Next</strong> button to proceed to the final step.

The final step is granting access rights to the user account.  Access rights are granted on a per directory basis.  However, they can be inherited by all
subdirectories contained in an accessible directory.  The default access is "Read Only", which means that the user can list files and folders in their home
directory and download them.  However, they cannot upload files, create new directories, delete files/folders, or rename files/folders.  If "Full Access" is
selected, the user is able to do all of these things.  After the user is created, these access rights can be configured on a more granular basis by
editing the user, and selecting the "Directory Access" tab.  After selecting the directory access rights, click the <strong>Finish</strong> button to create
the user account.

Congratulations!  Your Serv-U File Server is now accessible and ready for sharing.  You can create more accounts just like this one to share it with other
friends, family, or colleagues.  Each user can have a different home directory allowing you to share different files with different people.  There are many
more user configurable options that let you fine-tune an account's access to the server.  For more information on these options, refer to the documentation
on User Accounts.
::END


<!-- String table for Help-Serv-U-Concepts -->
$SERVER_CONCEPTS_HEADER$=Server Concepts

$SERVER_CONCEPTS_INTRO$::
The Serv-U File Server makes use of several concepts that aid in the understanding of how to configure and administer your File Server as a single, hierarchical
unit.  There are four related levels of configuration to the Serv-U File Server: the <strong>Server</strong>, the <strong>Domain</strong>, the 
<strong>Group</strong>, and the <strong>User</strong>.  Of all of these, only the <strong>Group</strong> is optional - all the other levels are mandatory
parts of the File Server. An explanation of each level is provided below.
::END

$SERVER_CONCEPTS_SERVER_HEADER$=Server
$SERVER_CONCEPTS_SERVER_BODY$::
The Server is the basic unit of the Serv-U File Server and the highest level of configuration available.  It represents the File Server as a whole and governs
the behavior of all Domains, Groups, and Users.  The Serv-U File Server ships with a set of default options that can be overridden on a per setting basis.  Thus,
the Server is at the top-level of the hierarchy of configuring Serv-U.  Domains, Groups, and Users inherit their default settings from the Server.  Inherited
settings can be overridden at each of these lower levels.  However, some settings are exclusive to the Server, such as the PASV port range.
::END

$SERVER_CONCEPTS_DOMAIN_HEADER$=Domain
$SERVER_CONCEPTS_DOMAIN_BODY$::
A Server can contain one or more Domains.  Domains are the interface through which Users connect to your File Server and access a specific User account.  A
Domain's settings are inherited from the Server.  It also defines the collection of settings that all of its Groups and User accounts inherit.  If a Server setting
is overridden at the Domain level, then all of its Groups and User accounts inherit that value as their default value.
::END

$SERVER_CONCEPTS_GROUP_HEADER$=Group
$SERVER_CONCEPTS_GROUP_BODY$::
The Group is an optional level of extra configuration provided to make it easier to manage related User accounts that share many of the same settings.  By using
a Group, administrators can quickly make changes that propagate to more than one User account instead of having to manually configure each one separately.  A
Group inherits all of its default settings from the Domain it belongs to.  It defines the collection of settings inherited by all Users who are a member of the
Group.  Virtually every User level setting can be configured at the Group level, or overridden at the User level.
::END

$SERVER_CONCEPTS_USER_HEADER$=User
$SERVER_CONCEPTS_USER_BODY$::
The User is at the bottom of the hierarchy.  It can inherit its default settings from multiple Groups (if it's a member of more than one Group) or from its
parent Domain (if it's not a member of a Group or the Group doesn't define a default setting).  A User account identifies a physical connection to the
File Server and defines the access rights and limitations of that connection.  Settings overridden at the User level cannot be overridden elsewhere and are
always applied to connections authenticated with that User account.
::END

$SERVER_CONCEPTS_COLLECTION_HEADER$=User Collections
$SERVER_CONCEPTS_COLLECTION_BODY$::
Unlike Groups, User Collections do not offer any level of configuration to the User accounts they contain.  Instead, they simply offer a way to organize users
into containers for ease of viewing and administration.  For example, Collections can be created to organize User accounts based upon Group membership, however
they must be manually maintained when User accounts change Group membership.
::END


<!-- String table for Help-Nav-Serv-U -->
$NAV_SERVU_HEADER1$=The Serv-U Management Console
$NAV_SERVU_INFO$::
The Serv-U Management Console is designed to provide quick and easy access to the File Server's configuration options in a familiar way.  When viewing a
configuration page, you can return to the main Management Console page at any time by clicking on the Serv-U File Server logo in the top-left corner.
::END

$NAV_LAYOUT$=Management Console Layout
$NAV_LAYOUT_INFO$::
The Management Console is presented in the familiar control panel style layout and arranged in to categories of related options.  Clicking a category header,
such as "Users", displays the user account management screen.  From this screen, each of the sub-category configuration options is available.  A sub-category
can also be selected to go directly to that sub-category's configuration page.

For Server Administrators, the Management Console is displayed in two columns.  The right column displays categories related to configuring server-wide options
and settings.  The left column displays categories related to configuring the active domain.  To change the active domain, click the <strong>Manage Domain</strong>
button in the top-left corner of the Management Console and select a different domain to administer.  Alternatively, the <strong>Change Domain</strong> button is
available in bottom-right corner of the footer.  This method of changing the active domain can be employed from any Management Console page.

Domain Administrators only have access to configuring settings and options for their applicable domain and do not have access to the server-level categories
displayed to System Administrators.
::END

$NAV_MENU$=Navigation Menu
$NAV_MENU_INFO$::
The Navigation menu is located in the lower-left corner of the screen and provides direct links to all of the Serv-U configuration categories. It is context 
sensitive and displays the relevant categories for the selection being configurated (Domain or Server) as well as an expandable list of configuration options 
for the currently selected category.
::END

$NAV_TABS$=Tabbed Configuration Pages
$NAV_TABS_INFO$::
When opening a category from the Management Console, all related sub-category pages are displayed in tabs on the same screen.  This allows for quick navigation
between related configuration options.
::END

$NAV_SERVU_WEB_CLIENT$=Launching A Web Client
$NAV_SERVU_WEB_CLIENT_INFO$::
While configuring the Serv-U File Server, an HTTP session can be launched by clicking the appropriate launch button in the toolbar at the bottom
of the page.  If licensed for use, the <strong>Web Client</strong> is available and runs from within the browser.  If licensed for use, FTP Voyager JV can also be
launched using the Java Runtime Environment, by clicking on the <strong>FTP Voyager JV</strong> button.
::END

$NAV_SERVU_THEMES$=Changing themes in Serv-U
$NAV_SERVU_THEMES_INFO$::
The "Theme" button, used to launch the theme menu, is located in the lower-right corner of the screen.  The menu lists the available themes available 
to change the look and feel of Serv-U. Simply select a theme from the drop down combo box then click the "OK" button.  The theme will be loaded without 
needing to refresh the page.
::END


<!-- String table for Help-UIC-Info -->
$UIC_HEADER$=User Interface Conventions
$UIC_INTRO$::
The Serv-U File Server uses a consistent method of representing configuration options in a manner that not only conveys the current value of the option, but
also whether or not that value is the default (or inherited) value.  Traditionally, this has been done with something called a tri-state checkbox.  The tri-state
checkbox has two major drawbacks:
::END
$UIC_TRI_STATE_LIST$::
The default state does not clearly convey the current value of the option.  In some versions of Windows, the box is checked with a grey background - even if the option isn't currently enabled!
They can only be used to represent binary values, which is to say they can only represent two values - on or off.
::END
$UIC_INTRO2$::
The Serv-U File Server uses a different, easy to understand convention that overcomes these drawbacks.  When an option is inheriting its value from a parent,
the text of the option is displayed in regular, unbolded text.  The value that is displayed (whether it's a text value or a checkbox) can change to
reflect changes made to the parent where the item is currently inheriting its value.

However, if the value is overriding the default, the text of the value is displayed in <strong>bold</strong>.  The value that is currently displayed is
always the value of that option, regardless of changes to its parent.
::END

$UIC_CASEFILE1_HEADER$=Understanding User Interface Conventions
$UIC_CASEFILE1_BODY$::
To better illustrate the user interface conventions, consider the following case file.

Acme Technology Co. is a computer repair company that maintains a Serv-U File Server providing global access to shared corporate resources to their traveling
technicians.  Each technician has their own account on the File Server.  To facilitate easy administration of the user accounts, the File Server administrator
has made each user account a member of the "Technician" group.  This group's Administration Privilege is set to <strong>No Privilege</strong> since none of the
technicians have any File Server administration duties.
::END
$UIC_CASEFILE1_BODY2$::
A technician receives a promotion.  In addition to his current technician duties, he is also given administration privileges on the File Server so he can
assist other technicians with their accounts.  The File Server administrator can simply edit the technician's user account and change the Administration
Privilege to <strong>Domain Administrator</strong>.  The text of this option turns bold to reflect that it is overriding the default value (No Privilege) that
the user account inherits from its membership to the "Technician" group.
::END
$UIC_CASEFILE1_BODY3$::
At a later date, the Administration Privilege can be reverted back to the default value inherited from the "Technician" group by selecting the <strong>Inherit
default value</strong> option in the "Administration Privilege" drop-down box.
::END


<!-- String table for Help-Server-Overview -->
$SERVER_OVERVIEW_HEADER$=Server Overview

$SERVER_OVERVIEW$::
The Serv-U File Server allows for certain settings to be configured at the Server level. When configured at the Server level, the settings apply to all Users, 
Groups, and Domains on the Server unless those settings are overridden at a lower level. Settings that can be configured at the Server level include: 
Directory Access rules, IP Access rules, bandwidth limitations, global user accounts (user accounts which can log into any Serv-U Domain), and more. Detailed 
information on each setting and how it can be configured is listed in the help pages below.
::END


<!-- String table for Help-IP-ACL -->
$IP_ACL_HEADER$=IP Access Rules

$IP_ACCESS_TXT$::
IP Access rules are an additional form of user authentication that can restrict login access to specific IP addresses, ranges of IP addresses, or even a domain
name.  IP Access rules can be configured at the Server, Domain, Group, and User levels.  The level at which an IP access rule is specified also defines how far
a connection is allowed before being rejected.  Server and Domain level IP access rules are applied before the Welcome message is sent.  Domain level IP access
rules are also applied when responding to the HOST command to connect to a virtual domain.  Group and User level IP access rules are applied in response to a
USER command when the client identifies itself to the server.

Specifying these rules ensures that only clients in certain networks can login. To configure IP Access rules, first specify what clients are allowed to login
or not allowed to login. Add rules by clicking the <strong>Add</strong> button and specifying what IP addresses or range of addresses are to be applied to the
rule.  If a dynamic DNS service, such as $LINK_DNS4ME$ is used, then a domain name can be specified in place of an IP address to allow access to clients that
travel and don't have a static IP address.  Reverse DNS names are also acceptable.  If a domain name or reverse DNS rule is created, Serv-U must perform either
a reverse DNS look-up or DNS resolution in order to apply these rules.  This can cause a slight delay during login depending upon the speed of the system's
DNS server.

Special formatting allows ranges and wildcards to be used, as below:
::END

$IP_ACCESS_RULE_EXACT$=xxx
$IP_ACCESS_RULE_EXACT_TXT$=An exact match such as <strong>192.168.1.1</strong>.
$IP_ACCESS_RULE_EXACT_TXT_FUTURE_FEATURE$=An exact match such as <strong>192.168.1.1</strong> (IPv4), <strong>fe80:0:0:0:a450:9a2e:ff9d:a915</strong> (IPv6, long form) or fe80::a450:9a2e:ff9d:a915 (IPv6, shorthand).

$IP_ACCESS_RULE_RANGE$=xxx-xxx
$IP_ACCESS_RULE_RANGE_TXT$=A specified range of IP addresses such as <strong>192.168.1.10-19</strong>.
$IP_ACCESS_RULE_RANGE_TXT_FUTURE_FEATURE$=A specified range of IP addresses such as <strong>192.168.1.10-19</strong> (IPv4), <strong>fe80:0:0:0:a450:9a2e:ff9d:a915-a9aa</strong> (IPv6, long form), or fe80::a450:9a2e:ff9d:a915-a9aa (IPv6, shorthand).

$IP_ACCESS_RULE_STAR$=*
$IP_ACCESS_RULE_STAR_TXT$=Any valid IP address value such as <strong>192.168.1.*</strong>, which is analogous to <strong>192.168.1.0-255</strong>.
$IP_ACCESS_RULE_STAR_TXT_FUTURE_FEATURE$=Any valid IP address value such as <strong>192.168.1.*</strong>, which is analogous to <strong>192.168.1.0-255</strong>, or <strong>fe80::a450:9a2e:ff9d:*</strong>, which is analogous to fe80::a450:9a2e:ff9d:0-ffff.

$IP_ACCESS_RULE_QUESTION$=?
$IP_ACCESS_RULE_QUESTION_TXT$=Any valid character when specifying a reverse DNS name such as <strong>server?.mydomain.com</strong>.

$IP_ACCESS_RULE_SLASH$=/
$IP_ACCESS_RULE_SLASH_TXT$=The slash separator allows the use of CIDR notation to specify which IP addresses should be allowed or blocked. Common CIDR blocks are <strong>/8 (for 1.*.*.*)</strong>, <strong>/16 (for 1.2.*.*)</strong> and <strong>/24 (for 1.2.3.*)</strong>. The block /32 can be used to specify a single IP address.
$IP_ACCESS_RULE_SLASH_IPV6_TXT$=Serv-U also supports IP Access rules based on IPv6 address ranges in CIDR notation. As with IPv4, the number after the slash indicates which addresses are considered a part of the range, such as 2001:db8::/32.

$IP_ACCESS_ABOUT$::
IP access rules are applied in the order they are displayed.  In this way, specific rules can be placed at the top to allow (or deny) access before a more
general rule is applied later on in the list.  The arrows on the right side of the list can be used to change the position of an individual rule in the list.
::END

$IP_ACCESS_APPROVED$::
Approved addresses already appearing in the list do not become automatically blocked by the anti-hammering rule.  For example, a local IP address <strong>192.168.0.17</strong>
causes Serv-U to initiate its anit-hammer rule to ban the IP address, but <strong>192.168.0.17</strong> is explicity approved in the list, <strong>192.168.0.17</strong>
is not automatically blocked by the anti-hammer rule.

Here's how it works.  Assuming the following IP access rules:

+ 192.168.0.17<br />
+ *

When there's activity coming from <strong>192.168.0.17</strong>, but the user gets the password wrong auto IP blocking (via timeout, anti-hammer, or by system admin from Sessions Activity) doesn't
occur because that IP address is specifically enabled.  The bottom item * means everyone is approved, without this value only <strong>192.168.0.17</strong> would be approved.
If anti-hammer kicks in for a different IP address the blocked IP address gets added to the top of the list, so it looks like:

- 10.10.10.1<br />
+ 192.168.0.17<br />
+ *

If an entire block of IP addresses is desired, this also works as described:

+ 192.168.0.1-255<br />
+ *

If anti-hammer kicks in on any of these IPs, the IP is not blocked.  The key here is the wild card *.  Serv-U also checks for *.*, *.*.*, *.*.*.* as being "any" IP address.
::END

$IP_ACCESS_SORT_HEADER$=Enable Sort Mode

$IP_ACCESS_SORT_INFO$::
This option allows the IP Access list to be sorted numerically rather than in the processing order.  Displaying the IP Access list in sort mode will not
change the order in which rules are processed - to view rule precedence disable this option. Viewing the IP Access list in numerical order can be a valuable
tool when reviewing long lists of access rules to determine if an entry already exists.
::END

$IP_ACL_CASEFILE1_HEADER$=Case File - Contractor
$IP_ACL_CASEFILE1_BODY$::
A contractor has been hired on a temporary basis, and access to the Serv-U File Server is required for the contract work to be completed effectively. He is 
granted access but should not be able to access the Server from locations outside of the field office as it would pose a risk to confidentiality. All of the 
in-office workstations are assigned IP addresses from 192.168.10.2-192.168.10.254. Therefore, create a Allow Access rule as shown:
::END
$IP_ACL_CASEFILE1_BODY2$::
The rule shown above permits the contractor to access the file server from inside the office, but because of the creation of the "Allow Access" rule there is 
an implicit "Deny All" rule added that prevents the account from being used anywhere else. He is granted the access necessary for the position, but the 
administrator has greater control over where the data is accessed from.
::END

$IP_ACL_CASEFILE2_HEADER$=Case File - Open Kiosks
$IP_ACL_CASEFILE2_BODY$::
A user needs to be able to access the Server from within the office, but should not be able to log on from a set of open PC kiosks in the building for security
reasons. The kiosks are assigned IP addresses from 192.168.15.100-192.168.15.110. Therefore, create a Deny Access rule which denies access to 
192.168.15.100-192.168.15.110. Keep in mind that because of the implicit "Deny All" rule added when using IP Access rules, an "Allow All" rule must be added 
at the end of the list to allow the user to log on from all other address ranges by entering an Allow Access rule which allows access to "*.*.*.*". This rule 
at the end ensures that connections are allowed from all other IP addresses.
::END

$IP_ACL_CASEFILE3_HEADER$=Case File - Access By Name
$IP_ACL_CASEFILE3_BODY$::
Users connecting from the examplesite.com Domain should be the only ones able to access the Domain. To restrict the users able to connect to the Domain, 
implement an IP Access rule based on reverse DNS and host name. First, create a new access rule allowing access to <strong>*.examplesite.com</strong>.

<strong>NOTE:</strong> For such an access rule to work, the PTR records for the IP addresses in question must match the rule that has been created. Generally, 
the connecting clients must be connecting from a large company with an IP range assigned to it for the connecting IP addresses to have such PTR records - 
typically, dynamic IP addresses do not meet the requirement.
::END


<!-- String table for Help-Database-Access -->
$DATABASE_HEADER$=Database Access

$DATABASE_ACCESS_BODY1$::
Serv-U enables the use of an ODBC database to store and maintain group and user accounts at both the Domain and Server levels. The ODBC
connections are configured from two locations: <strong>Domain | Domain Details | Database</strong> and <strong>Server | Server Details | Database</strong>.
Serv-U can automatically create all of the tables and columns necessary to begin storing Users and Groups in your database. Because Serv-U uses one set of 
table names to store its information, individual ODBC connections must be configured for each item which stores details in the database.  In other words,
the Server as well as each Domain must have a unique ODBC connection to ensure they are stored separately.  To configure a database, follow these steps:
::END

$DATABASE_PREP_LIST1$::
Create an ODBC connection for Serv-U to use. RhinoSoft.com recommends MySQL, but any database that has a Windows ODBC driver available can be utilized. Use a System DSN if Serv-U is operating as a system service, or a User DSN if Serv-U is operating as a regular application.
Open the Serv-U Management Console and browse to the appropriate Domain or Server database settings.  Enter the Data Source Name (DSN), the login ID, and Password and click <strong>Save</strong>.
::END

$DATABASE_ACCESS_BODY2$::
If the database connection is being configured for the first time, leave the <strong>Automatically create</strong> options checked.  With these options
checked, the Serv-U File Server builds the database tables and columns automatically.
::END

$DB_SQL_TEMPLATES$=SQL Templates
$DB_SQL_TEMPLATES_TXT$::
Serv-U uses multiple queries to maintain the databases containing User and Group information.  These queries conform to the SQL language standards.  However,
if the database you're using is having problems working with Serv-U, you may need to alter these queries.  From the SQL Templates dialog, each query used by
Serv-U can be specially tailored to conform to the standards supported by your database.

<strong>NOTE:</strong> Incorrectly editing these SQL queries could cause ODBC support to stop working in Serv-U.  Do not edit these queries unless you are
comfortable constructing SQL statements and are positive that it is necessary to enable ODBC support with your database software.
::END

$DB_TABLE_MAPPINGS$=User and Group Table Mappings
$DB_TABLE_MAPPINGS_TXT$::
By default, Serv-U automatically creates and maintains the tables and columns necessary to store User and Group information in a database.  However, if you're
attempting to connect Serv-U to an existing database containing this information, you need to customize the table and column names to conform to the existing
database structure.  Click the <strong>User Table Mappings</strong> or <strong>Group Table Mappings</strong> to get started.

Serv-U stores information for a User or Group in 10 separate tables.  Only the User/Group Info Table and User/Group Dir Access Table are required.  The current
table can be changed from the <strong>Object Table</strong> drop-down box.  The <strong>Attribute</strong> column lists the attributes that are stored in the
current table.  The <strong>Mapped Database Value</strong> displays the name of the column that attribute is mapped to in the database.  The first row always
displays the "TableName" and can be used to change the name of the table.

Certain tables where the order of the entries bears significance have a <strong>SortColumn</strong> attribute listed.  This column is used to store the order
in which rules are applied.

Click the <strong>Edit</strong> button or double-click the column name to edit a value.
::END


$DB_TABLE_MAPPINGS_TXT2$::
When <strong>enabled</strong>, the table is accessed as needed. In special situations a table that isn't being used may be disabled to reduce the number of ODBC (database) 
calls. For example, if not using Ratios and Quotas "User Ratio-Free Files", "Per User Files Ratio", "Per User Bytes Ratio", "Per Session Files Ratio", and 
"Per Session Bytes Ratio" tables may be disabled preventing unneeded ODBC calls. Exercise caution when disabling tables as the fields will appear in dialogs, 
but they will not be saved or loaded. The "User Info" and "Group Info" tables cannot be disabled.
::END

$DATABASE_ACCESS_CASEFILE1_HEADER1$=Case File - ODBC Authentication
$DATABASE_ACCESS_CASEFILE1_BODY1$::
Authentication in the Serv-U File Server can be handled through an ODBC database, allowing for scripted account management and maintenance. In order to make use 
of ODBC functionality, migrate to ODBC authentication through a database. By storing credentials in settings in a database, accounts can be managed from outside 
the Serv-U Management Console via scripted database operations which can be built into many existing account provisioning systems.  A DSN must first be created in 
Control Panel | Administrative Tools | Data Sources (ODBC) - use a System DSN if Serv-U is running as a service or a User DSN if Serv-U is running as an 
application. Once the proper DSN has been created, specify the Data Source Name, login ID and password and select <strong>Save</strong>. Serv-U creates the 
tables and columns transparently. Database Users and Groups can be managed from the Database Users and Database Groups sections of Serv-U (located near the normal 
Users and Groups tabs).
::END


<!-- String table for Help-Events -->
$EVENTS_HEADER$=Serv-U Events

$EVENTS_BODY1$::
Serv-U enables the use of event handling which can perform various actions triggered by a list of selected events.  Below is a list of actions
available to administrators:
::END

$EVENTS_SERVER$=Server Events
$EVENTS_LIST1$::
$SUEVENT_ID_SERVER_START_TEXT$
$SUEVENT_ID_SERVER_STOP_TEXT$
::END

$EVENTS_SERVER_DOMAIN$=Server and Domain Events
$EVENTS_LIST2$::
$SUEVENT_ID_DOMAIN_START_TEXT$
$SUEVENT_ID_DOMAIN_STOP_TEXT$
$SUEVENT_ID_SESSION_CONNECT_TEXT$
$SUEVENT_ID_SESSION_DISCONNECT_TEXT$
$SUEVENT_ID_SESSION_CONNECT_FAILURE_TEXT$
::END

$EVENTS_LIST2_FUTURE_FEATURE$::
$SUEVENT_ID_LOG_DELETED_TEXT$
::END

$EVENTS_ALL$=Server, Domain, User and Group Events
$EVENTS_LIST3$::
$SUEVENT_ID_USER_LOGIN_TEXT$
$SUEVENT_ID_USER_LOGOUT_TEXT$
$SUEVENT_ID_USER_LOGIN_FAILURE_TEXT$
$SUEVENT_ID_USER_PASSWORD_CHANGE_TEXT$
$SUEVENT_ID_USER_PASSWORD_CHANGE_FAILURE_TEXT$
$SUEVENT_ID_USER_ENABLED_TEXT$
$SUEVENT_ID_USER_DISABLED_TEXT$
$SUEVENT_ID_USER_DELETED_TEXT$
$SUEVENT_ID_IP_BLOCKED_TEXT$
$SUEVENT_ID_IP_BLOCKED_TIME_TEXT$
$SUEVENT_ID_TOO_MANY_SESSIONS_TEXT$
$SUEVENT_ID_TOO_MANY_SESSIONS_ON_IP_TEXT$
::END

$EVENTS_LIST3_FUTURE_FEATURE$::
$SUEVENT_ID_IP_ADDR_AUTO_BLOCKED_TIME_TEXT$
$SUEVENT_ID_USER_ADDED_TEXT$
$SUEVENT_ID_USER_PASSWORD_RECOVERY_SENT_TEXT$
$SUEVENT_ID_USER_PASSWORD_RECOVERY_FAILED_TEXT$
::END

$EVENTS_LIST3_2$::
$SUEVENT_ID_FILE_UPLOAD_TEXT$
$SUEVENT_ID_FILE_UPLOAD_FAIL_TEXT$
$SUEVENT_ID_FILE_DOWNLOAD_TEXT$
$SUEVENT_ID_FILE_DOWNLOAD_FAIL_TEXT$
$SUEVENT_ID_FILE_DELETE_TEXT$
$SUEVENT_ID_FILE_MOVE_TEXT$
$SUEVENT_ID_DIR_CREATE_TEXT$
$SUEVENT_ID_DIR_DELETE_TEXT$
$SUEVENT_ID_DIR_CHANGE_TEXT$
$SUEVENT_ID_DIR_MOVE_TEXT$
$SUEVENT_ID_QUOTA_OVERAGE_TEXT$
$SUEVENT_ID_DISK_SPACE_OVERAGE_TEXT$
::END

$EVENTS_ACTIONS$=Event Actions
$EVENTS_BODY2$::
Administrators can select from three different actions that will be executed when an event is triggered. Below is a list of these actions:
::END

$EVENTS_LIST4$::
$SUEVENT_ACTION_EMAIL_TEXT$
$SUEVENT_ACTION_BALLOON_TIP_TEXT$ (Server administrator only)
$SUEVENT_ACTION_EXEC_TEXT$ (Server administrator only)
::END

$EVENTS_EMAIL_ACTION$=Email Actions
$EVENTS_BODY3$::
Email actions can be configured to send an email when an event is triggered.  Email actions contain an "To", "Subject" and "Message" 
parameter.  Special variables may be used to send specific data pertaining to the event.  Please refer to the list of these variables located under "<a href="Help-System-Variables.htm">System Variables</a>".
::END

$FUTURE_FEATURE_EVENTS_BODY3$::
Email actions can be configured to send emails to multiple recipients and to Serv-U Groups when an event is triggered.  To add an email address, enter it in the "To" or "Bcc" fields. To send mail to a Serv-U
Group, use the "Group" icon to add or remove Serv-U Groups from the distribution list.  Email addresses must be seperated with commas or semicolons.  Email actions contain an "To", "Subject" and "Message" 
parameter.  Special variables may be used to send specific data pertaining to the event.  Please refer to the list of these variables located under "<a href="Help-System-Variables.htm">System Variables</a>".
::END

$EVENTS_BALLOON_ACTION$=Balloon Tip Actions
$EVENTS_BODY4$::
Balloon tip actions can be configured to show a balloon tip in the system tray when an event is triggered.  Balloon tip actions contain a "Balloon Title" and "Balloon Message" 
parameter.  Special variables may be used to send specific data pertaining to the event. Please refer to the list of these variables located under "<a href="Help-System-Variables.htm">System Variables</a>".
::END

$EVENTS_EXEC_ACTION$=Execute Command Actions
$EVENTS_BODY5$::
Execute command actions can be configured to execute a command on a file when an event is triggered.  Execute command actions contain an "Executable Path" and "Command Line Parameters" 
parameter. Special variables may be used to send specific data pertaining to the event.  Please refer to the list of these variables located under "<a href="Help-System-Variables.htm">System Variables</a>".
::END

$FUTURE_FEATURE_EVENTS_BODY5$::
Execute command actions can be configured to execute a command on a file when an event is triggered.  Execute command actions contain an "Executable Path", "Command Line Parameters", and "Completion Wait Time"
parameter. For the "Completion Wait Time" parameter, you may enter the number of seconds to wait after starting the executable path. Enter a value of 0 for no waiting. 

<strong>NOTE:</strong> any amount of time Serv-U spends waiting delays any processing that Serv-U can perform. 

A wait value should only be used to give an external program enough time to perform some operation, such as move a log file before it is deleted (i.e., $LogFilePath for the "Log File Deleted" event).
Special variables may be used to send specific data pertaining to the event. Please refer to the list of these variables located under "<a href="Help-System-Variables.htm">System Variables</a>".
::END

$EVENTS_COMMON$=Creating Common Events
$EVENTS_COMMON_BODY$::
Serv-U allows administrators to automatically create a list of the most common events.  You may choose to create these common events using email and/or balloon tip actions.  Simply click the "Create Common Events" 
button located in the "Events" tab.  Select either the "Send Email" or "Show balloon tip" radio button for the action you want to be performed on the common events.  If you choose to "Send Email" you must also enter an 
"To:" address where the events are to be sent.
::END


<!-- String table for Help-Events -->
$SMTP_CONFIG_HEADER$=Serv-U SMTP Configuration

$SMTP_CONFIG_BODY$::
Serv-U allows administrators to configure an SMTP connection to send email for events configured to use email actions. SMTP can be configured on the server and/or the domain level.  
SMTP configuration at the domain level may be inherited from the server level.  The SMTP configuration dialog is located in the "Events" tab in the "Domain Details" and "Server Details" pages.  
Simply click on the "Configure SMTP" button to launch the dialog.
::END

$SMTP_CONFIG_SERVER_INFO$=SMTP Server Information
$SMTP_CONFIG_SERVER_INPUT$::
SMTP Server - the name or IP address of the SMTP server.
SMTP Server Port - the port the smtp server is using.
From Email Address - the email address to use for the outgoing email.
::END

$SMTP_CONFIG_FROM_NAME$::
From Name (optional) - the name to use for the outgoing email.
::END

$SMTP_CONFIG_SERVER_AUTH$::
My server requires authentication - to enable authentication check this box.
::END

$SMTP_CONFIG_SSL_CONN$::
This server requires a secure connection (SSL) - Some SMTP servers require that all incoming connections be encrypted to protect against possible attacks.  If your server requires incoming SMTP connections to be encrypted, enable this option. The default port for encrypted SMTP connections is 465. Serv-U supports Implicit SSL only, and does not support Explicit SSL (port 587).
::END



$SMTP_CONFIG_AUTH_INFO$=Authentication Information
$SMTP_CONFIG_AUTH_BODY$::
If your SMTP server requires authentication you must enter the following information:
::END
$SMTP_CONFIG_AUTH_INPUT$::
Account Name - the account name associated with authentication for the SMTP server.
Password - the password for the account.
::END

<!-- String table for Help-License-Details -->
$LICENSE_DETAILS_HEADER$=License Information

$LICENSE_DETAILS_BODY1$::
The License Details tab displays the information contained in the current registration ID in use by the Serv-U File Server.  If the installation is running in
trial mode, then information on the number of trial days remaining is also included.  Information contained on this tab includes:
::END

$LICENSE_DETAILS_NAME$=Name
$LICENSE_DETAILS_NAME_TXT$=The name associated with the current license.

$LICENSE_DETAILS_EMAIL$=Email Address
$LICENSE_DETAILS_EMAIL_TXT$=The email address associated with the current license.

$LICENSE_DETAILS_EDITION$=Serv-U Edition
$LICENSE_DETAILS_EDITION_TXT$=The Serv-U Edition that is enabled by the current license.  See $LINK_HELP_EDITIONS$ for more information.

$LICENSE_DETAILS_COPIES$=Copies
$LICENSE_DETAILS_COPIES_TXT$=The number of concurrent installations allowed by the current license.

$LICENSE_DETAILS_DATE$=Purchase Date
$LICENSE_DETAILS_DATE_TXT$=The date the current license was purchased.

$LICENSE_DETAILS_UPDATES$=Updates
$LICENSE_DETAILS_UPDATES_TXT$=The date through which the current license allows free updates to the latest version.  If running as a trial, the number of trial days remaining is displayed.

$LICENSE_DETAILS_INFO$=Edition Information
$LICENSE_DETAILS_INFO_TXT$=Displays enabled functionality and limitations of the licensed Serv-U Edition.

$LICENSE_DETAILS_PRODUCTS$=Additional Products
$LICENSE_DETAILS_PRODUCTS_TXT$=Additional add-ons for Serv-U and whether or not they are enabled.

$LICENSE_DETAILS_REGISTER_HEADER1$=Registering Serv-U
$LICENSE_DETAILS_REGISTER_BODY1$::
To Register the Serv-U File Server, click the <strong>Register</strong> button on the bottom toolbar and enter your alphanumeric registration ID. If you have 
lost your ID, click on the <strong>Lost ID</strong> button for assistance in retrieving it. If you need to purchase an ID, click on the <strong>Purchase</strong>
button to visit our web site to purchase an ID.
::END


<!-- String table for Help-Prog-Info -->
$PROG_INFO_HEADER$=Program Information
$PROG_INFO_BODY$::
The Program Information tab displays information about the current version of Serv-U installed on the server including:
::END

$PROG_INFO_BUILD$=Build Date
$PROG_INFO_BUILD_TXT$::
The date of the software build for the current installation.
::END

$PROG_INFO_INSTALL$=Install Date
$PROG_INFO_INSTALL_TXT$::
The original date that Serv-U was first installed on the computer.
::END

$PROG_INFO_VERSION$=Serv-U File Server Version Number
$PROG_INFO_VERSION_TXT$::
The full version number for the current installation.
::END

$PROG_INFO_CONTACT$=Contact Information
$PROG_INFO_CONTACT_TXT$::
The contact information for RhinoSoft.com.  If you're administering Serv-U using a language other than English, contact information is also provided for the
Authorized RhinoSoft.com Reseller responsible for the translation.
::END

$PROG_INFO_DEV$=Development Information
$PROG_INFO_DEV_TXT$::
Information on the development and localization (if applicable) for the Serv-U File Server.
::END

$PROG_INFO_LEGAL$=Legal Disclaimer
$PROG_INFO_LEGAL_TXT$::
The Serv-U legal disclaimer.
::END


<!-- String table for Help-Limits-Settings-XXXXX -->
$LIMITS_SETTINGS_HEADER$=Limits and Settings

$LIMITS_SETTINGS_BASICS_BODY1$::
Serv-U offers advanced options which can be used to customize how it may be used as well as ways to apply limits and custom settings to <strong>Users</strong>,
<strong>Groups</strong>, <strong>Domains</strong>, and the <strong>Server</strong> in its entirety. The limits stack intelligently, with User settings 
overriding Group settings, Group settings overriding Domain settings, and Domain settings overriding Server settings.  In addition, limits can be applied only
during certain days of the week or times of the day.  It is possible to grant exceptions to administrators and restrict specific Users more than others, 
providing total control over the Server. The Limits and Settings in Serv-U are split into five categories: <strong>Connection</strong>, <strong>Password</strong>,
<strong>Directory Listing</strong>, <strong>Data Transfer</strong>, and <strong>Advanced</strong>.

To apply a limit, select the appropriate category, click on the <strong>Add</strong> button, select the limit, then select or enter the value. For example, to
disable the <strong>Lock users in home directory</strong> option for a Domain, follow these steps:
::END

$LIMITS_SETTINGS_BASICS_LIST1$::
Select Domain Limits & Settings link from the Serv-U Management Console.
Select <strong>Directory Listing</strong> from the "Limit Type" drop-down box.
Click the <strong>Add</strong> button.
Select <strong>Lock users in home directory</strong> from the "Limit" drop-down box.
Uncheck the option.
Click the <strong>Save</strong> button.
::END

$LIMITS_SETTINGS_BASICS_BODY2$::
The limits list displays the current limits applied to the domain.  Limits with a light-blue shade to the background are default values.  Limits with a white
background are values that override the defaults.  After completing the above steps, a new <strong>Lock users in home directory</strong> limit appears in the
list that displays "No" for the value.  Because of inheritance rules, this option applies to all users in the domain unless overridden at the Group or User
level. For more information on this method of inheritance, see the $LINK_HELP_UIC$ section of the Help documentation.

Limits can be deleted by selecting them and clicking the <strong>Delete</strong> button.  To edit an overridden value, select the limit and click the
<strong>Edit</strong> button. Default rules cannot be edited or deleted.  Create a new limit to override a default one.

To create a limit that is restricted to a specific time of day or days of the week, click the <strong>Advanced</strong> button from the New / Edit Limit dialog.
The additional options allow you to <strong>Apply limit only at this time of day</strong> at which point a start and stop time for the new limit can be entered.
To restrict the limit to certain days of the week, uncheck the boxes next to the days you don't want the limit applied.  When a limit is restricted in this way,
default values (or the value of other limit overrides) are applied when the time of day or day of the week restrictions are not met for this limit.
::END

$LIMITS_SETTINGS_SERVER$::
The following is a reference of all available <strong>Server</strong> limits, organized by category.
::END
$LIMITS_SETTINGS_DOMAIN$::
The following is a reference of all available <strong>Domain</strong> limits, organized by category.
::END
$LIMITS_SETTINGS_GROUP$::
The following is a reference of all available <strong>Group</strong> limits, organized by category.
::END
$LIMITS_SETTINGS_USER$::
The following is a reference of all available <strong>User</strong> limits, organized by category.
::END

$CONNECTION_LS_HEADER$=Connection
$CONNECTION_LS_USER_GROUP_LIST_HEADER$=Connection

$CONNECTION_LS_HOMEDIR$=Automatically create home directories
$CONNECTION_LS_HOMEDIR_TXT$::
Instructs Serv-U on whether or not to automatically create the home directory specified when creating a new user account if the directory does not already
exist.
::END

$CONNECTION_LS_ANTI_TIMEOUT$=Block anti-timeout schemes
$CONNECTION_LS_ANTI_TIMEOUT_TXT$::
Blocks the use of commands such as "NOOP", which is commonly used to keep FTP Command Channel connections open during long file transfers or other periods
of inactivity where no information is being transferred on the control channel.  When these are blocked, Serv-U disconnects the client when the connection
has been idle, i.e., not transferring data, for a specified period of time.
::END

$CONNECTION_LS_IDLE$=Automatic idle connection timeout
$CONNECTION_LS_IDLE_TXT$::
Specifies the number of minutes that must pass after the last client data transfer before a session is disconnected for being idle.
::END

$CONNECTION_LS_SERVER_SESSIONS$=Maximum number of sessions on server
$CONNECTION_LS_SERVER_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be allowed on the entire Server.
::END

$CONNECTION_LS_SERVER_IP_SESSIONS$=Maximum sessions per IP address on server
$CONNECTION_LS_SERVER_IP_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be opened to the entire Server from a single IP address.
::END

$CONNECTION_LS_USER_IP_SESSIONS$=Maximum sessions per IP address for user account
$CONNECTION_LS_USER_IP_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that a User may open from a single IP address.
::END

$CONNECTION_LS_USER_SESSIONS$=Maximum number of sessions per user account
$CONNECTION_LS_USER_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be opened from a single User account.
::END

$CONNECTION_LS_SECURE$=Require secure connection before login
$CONNECTION_LS_SECURE_TXT$::
Requires that a connection be secure, (e.g., FTPS, SFTP, or HTTPS), before it is accepted.
::END

$CONNECTION_LS_TIMEOUT$=Automatic session timeout
$CONNECTION_LS_TIMEOUT_TXT$::
Specifies the number of minutes a session is allowed to last before being disconnected by the Server.
::END

$CONNECTION_LS_BLOCK_IP_SESSION_TIMEOUT$=Block IP Address Of Timed Out Session
$CONNECTION_LS_BLOCK_IP_SESSION_TIMEOUT_TXT$::
Specifies the number of minutes for which the IP address of a timed out session is blocked.
::END

$CONNECTION_LS_ALLOW_XFORWARDED_FOR$=Allow X-Forwarded-For to change HTTP connection IP addresses
$CONNECTION_LS_ALLOW_XFORWARDED_FOR_TXT$::
When enabled, the "X-Forwarded-For" HTTP header parameter changes the IP address of the client for Serv-U. This is useful when all HTTP 
connections are coming from a proxy server or load balancer. Proxy servers and load balancer typically append this parameter to the HTTP 
header so that HTTP servers can identify the actual client IP address and apply security rules as needed.
::END

$CONNECTION_LS_REQUIRE_PTR$=Require reverse DNS name
$CONNECTION_LS_REQUIRE_PTR_TXT$::
Requires that users connecting to the server connect from an IP address that has a valid reverse DNS name, also known as a PTR record. Checks
for the existence of a valid PTR record but does not check its contents.
::END

$CONNECTION_LS_ALLOW_FTP_FTPS$=Allow FTP and FTPS Connections
$CONNECTION_LS_ALLOW_FTP_FTPS_TXT$::
Allows the user to connect using the FTP and FTPS protocols.  Uncheck "Allow FTP and FTPS connections" to disable the FTP and FTPS protocols.
::END

$CONNECTION_LS_ALLOW_SFTP$=Allow SFTP Connections
$CONNECTION_LS_ALLOW_SFTP_TXT$::
Allows the user to connect using the SFTP protocol.  Uncheck "Allow SFTP connections" to disable the SFTP protocol.
::END

$CONNECTION_LS_ALLOW_HTTP_HTTPS$=Allow HTTP and HTTPS Connections
$CONNECTION_LS_ALLOW_HTTP_HTTPS_TXT$::
Allows the user to connect using the HTTP and HTTPS protocols.  Uncheck "Allow HTTP and HTTPS connections" to disable the HTTP and HTTPS protocols.
::END		

$CONNECTION_LS_DOMAIN_SESSIONS$=Maximum number of sessions on domain
$CONNECTION_LS_DOMAIN_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be allowed on the current Domain.
::END

$CONNECTION_LS_DOMAIN_IP_SESSIONS$=Maximum sessions per IP address on domain
$CONNECTION_LS_DOMAIN_IP_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be opened to the current Domain from a single IP address.
::END

$CONNECTION_LS_GROUP_SESSIONS$=Maximum number of sessions for group
$CONNECTION_LS_GROUP_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be allowed for all Users that are a member of the Group.
::END

$CONNECTION_LS_GROUP_IP_SESSIONS$=Maximum sessions per IP address for group
$CONNECTION_LS_GROUP_IP_SESSIONS_TXT$::
Specifies the maximum number of concurrent sessions that may be opened from a single IP address for all Users of the Group.
::END

$PASSWORD_LS_HEADER$=Password

$PASSWORD_LS_ANON_PASS$=Check anonymous passwords
$PASSWORD_LS_ANON_PASS_TXT$::
Specifies whether or not Serv-U should validate email addresses supplied as the password to login anonymously.
::END

$PASSWORD_LS_ENCRYPT_PASS$=Password Encryption Mode
$PASSWORD_LS_ENCRYPT_PASS_TXT$::
Specifies the level of password encryption on user passwords.  The options are: "One-way encryption (more secure)"
which fully encrypts passwords and cannot be reversed, "Simple two-way encryption (less secure)" which encrypts
passwords in a reversible format for easy recovery, and "No encryption (not recommended)" which stores passwords in
clear text.  When this setting is changed, existing passwords are not updated and must be re-saved to be stored in
the new format.
::END

$PASSWORD_LS_USER_PASS_RECOVERY$=Allow users to recover password
$PASSWORD_LS_USER_PASS_RECOVERY_TXT$::
If enabled, allows users to recover passwords using the Web Client password recovery utility at the login page.
::END

$PASSWORD_LS_MASK_PASS$=Mask received passwords in logs
$PASSWORD_LS_MASK_PASS_TXT$::
Masks the passwords received from clients from being shown in log files. Disabling this allows passwords to be displayed
in log files, which can be useful for debugging connection problems or auditing User account security.
::END

$PASSWORD_LS_MIN_PASS_LEN$=Minimum password length
$PASSWORD_LS_MIN_PASS_LEN_TXT$::
Specifies the minimum number of characters required in a User account's password.  Specifying 0 characters indicates that there is no minimum requirement.
::END

$PASSWORD_LS_CHANGE_PASS$=Allow users to change password
$PASSWORD_LS_CHANGE_PASS_TXT$::
Specifies whether or not Users are allowed to change their own passwords.
::END

$PASSWORD_LS_EXPIRE_PASS$=Automatically expire passwords
$PASSWORD_LS_EXPIRE_PASS_TXT$::
Specifies the number of days a password is valid before it must be changed.  Specifying 0 days means passwords never expire.
::END

$PASSWORD_LS_COMPLEX_PASS$=Require complex passwords
$PASSWORD_LS_COMPLEX_PASS_TXT$::
Specifies that all User account passwords must contain at least one uppercase and one non-alphabetic character to be considered valid.
::END

$PASSWORD_LS_SSH_AUTH_TYPE$=SSH authentication type
$PASSWORD_LS_SSH_AUTH_TYPE_TXT$::
Specifies how SSH authentication is to occur.  Options include: "Password and Public Key" - requires both a password and a public key
(when specified) for login; "Password or Public Key" - requires either a password or public key for login; "Public Key Only" - requires
that a public key is provided for successful login, a password is not allowed; "Password Only" - requires that a password is provided
for successful login, a public key is not allowed.
::END

$DIRECTORY_LISTING_LS_HEADER$=Directory Listing

$DIR_LIST_HIDE_HIDDEN$=Hide files marked as hidden from listings
$DIR_LIST_HIDE_HIDDEN_TXT$::
Hides files and folders from directory listings that have the Windows "hidden" system attribute set on them.
::END

$DIR_LIST_LOCK_HOMEDIR$=Lock users in home directory
$DIR_LIST_LOCK_HOMEDIR_TXT$::
Locks Users into their home directory, and does not allow Users to browse above that folder. In addition, their home directory is displayed as "/" masking the 
actual physical location.
::END

$DIR_LIST_USE_LOWER$=Use lowercase for file names and directories
$DIR_LIST_USE_LOWER_TXT$::
Forces Serv-U to display all file names and directories using lowercase characters, regardless of the actual letter case in use by the file or directory.
::END

$DIR_LIST_UNLOCK_ROOT$=Allow root ("/") to list drives for unlocked users
$DIR_LIST_UNLOCK_ROOT_TXT$::
Allows Users to change directory to the root ("/") of the system and display all drives on the computer.  This option only works when the User is not locked
in their home directory.
::END

$DIR_LIST_TREAT_SHORTCUTS$=Treat Windows shortcuts as target in links
$DIR_LIST_TREAT_SHORTCUTS_TXT$::
Instructs Serv-U to treat all valid .lnk (shortcut) files as a UNIX symbolic link.
::END

$DIR_LIST_SHORTCUT_LINKS$=Interpret Windows shortcuts as links
$DIR_LIST_SHORTCUT_LINKS_TXT$::
Instructs Serv-U to treat all valid .lnk files as the actual destination object.  In other words, if a .lnk file points to another file, the destination file
is shown in the directory listing instead of the .lnk file itself.
::END

$DIR_LIST_NATURAL_SORTNG$=Use natural language sorting for sorted listings
$DIR_LIST_NATURAL_SORTNG_TXT$::
By default, Serv-U users natural language sorting for more a more intuitive sort order. However, some clients may prefer ASCII sorting. Serv-U supports both 
sort orders.
::END


$DIR_LIST_COMP_STATE$=Hide the compressed state of files and directories.
$DIR_LIST_COMP_STATE_TXT$::
Hides the compressed state of all compressed files and directories being viewed by the user.
::END


$DIR_LIST_ENCRYPT_STATE$=Hide the encrypted state of files and directories.
$DIR_LIST_ENCRYPT_STATE_TXT$::
Hides the encrypted state of all encrypted files and directories being viewed by the user.
::END

$DATA_TRANSFER_LS_HEADER$=Data Transfer

$DATA_TRANSFER_DELETE_PARTIAL$=Delete partially uploaded files
$DATA_TRANSFER_DELETE_PARTIAL_TXT$::
Instructs Serv-U to delete incomplete file uploads.  If this option is enabled, Users are not able to restart interrupted uploads using the REST (Restart)
FTP command.
::END

$DATA_TRANSFER_SERVER_MAX_DL$=Maximum download speed for server
$DATA_TRANSFER_SERVER_MAX_DL_TXT$::
Limits the maximum bandwidth that can be used Server-wide for all downloads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_SERVER_MAX_UL$=Maximum upload speed for server
$DATA_TRANSFER_SERVER_MAX_UL_TXT$::
Limits the maximum bandwidth that can be used Server-wide for all uploads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_MAX_SESSION_DL$=Maximum download speed per session
$DATA_TRANSFER_MAX_SESSION_DL_TXT$::
Limits the maximum download bandwidth for each individual session.  Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_MAX_SESSION_UL$=Maximum upload speed per session
$DATA_TRANSFER_MAX_SESSION_UL_TXT$::
Limits the maximum upload bandwidth for each individual session.  Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_MAX_USER_DL$=Maximum download speed for user accounts
$DATA_TRANSFER_MAX_USER_DL_TXT$::
Limits the maximum download bandwidth shared between all sessions associated with an individual User account.  Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_MAX_USER_UL$=Maximum upload speed for user accounts
$DATA_TRANSFER_MAX_USER_UL_TXT$::
Limits the maximum upload bandwidth shared between all sessions associated with an individual User account.  Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_MAX_UL_SIZE$=Maximum Upload File Size
$DATA_TRANSFER_MAX_UL_SIZE_TXT$::
Restricts the maximum single file size a user can upload to Serv-U.  File size measured in kilobytes.
::END

$DATA_TRANSFER_INTERPRET_LINE_FEED$=Interpret line feed byte as a new line when in ASCII mode
$DATA_TRANSFER_INTERPRET_LINE_FEED_TXT$::
When uploading and downloading files using ASCII mode, Serv-U will assume &lt;LF&gt; characters are the same as &lt;CR&gt;&lt;LF&gt; 
end-of-line markers. Most Windows applications expect &lt;CR&gt;&lt;LF&gt; to represent a new-line, as does the FTP protocol. 
However, since the definition of a new-line sequence is not fully defined in Windows, this option allows Serv-U 
to assume &lt;LF&gt; is the same as &lt;CR&gt;&lt;LF&gt;. When uploading in ASCII mode stand-alone &lt;LF&gt; characters are changed to 
&lt;CR&gt;&lt;LF&gt; prior to writing to the file. When downloading in ASCII mode, stand-alone &lt;LF> characters are changed to 
&lt;CR&gt;&lt;LF&gt; prior to sending to the client.
::END

$DATA_TRANSFER_DOMAIN_MAX_DL$=Maximum download speed for domain
$DATA_TRANSFER_DOMAIN_MAX_DL_TXT$::
Limits the maximum bandwidth that can be used Domain-wide for all downloads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_DOMAIN_MAX_UL$=Maximum upload speed for domain
$DATA_TRANSFER_DOMAIN_MAX_UL_TXT$::
Limits the maximum bandwidth that can be used Domain-wide for all uploads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_GROUP_MAX_DL$=Maximum download speed for all group members
$DATA_TRANSFER_GROUP_MAX_DL_TXT$::
Limits the maximum total bandwidth that can be used by all members of the Group for all downloads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$DATA_TRANSFER_GROUP_MAX_UL$=Maximum upload speed for all group members
$DATA_TRANSFER_GROUP_MAX_UL_TXT$::
Limits the maximum total bandwidth that can be used by all members of the Group for all uploads. Setting a limit of 0 KB/s means unlimited bandwidth.
::END

$HTTP_LS_HEADER$=HTTP

$HTTP_DEFAULT_LANG$=Default language for Web Client
$HTTP_DEFAULT_LANG_TXT$::
When the end-user connects with an unsupported language, the HTTP Login Page is displayed in English. The default language 
can be set to any desired language. When connecting to Serv-U using a supported localization of Windows, the native language of Windows is used.
::END

$HTTP_MEDIA_PLAYBACK$=Allow HTTP media playback
$HTTP_MEDIA_PLAYBACK_TXT$::
The Serv-U Web Client supports fully interactive media playback of audio and video files. This function can be disabled 
as desired during specific business hours or altogether based on business needs.
::END

$HTTP_REMEMBER_LOGIN$=Allow the users browser to remember login information
$HTTP_REMEMBER_LOGIN_TXT$::
The HTTP login page supports a "Remember me" option (not enabled by default) that allows usernames to be remembered by 
the login page. This feature can be disabled for security reasons.
::END

$HTTP_CHANGE_THEMES$=Allow users to change themes
$HTTP_CHANGE_THEMES_TXT$::
The Serv-U Web Client supports visual themes to change the look and feel of the Web Client and HTTP login page. This 
feature is visual only and has no impact on security or functionality. This option can be disabled for business needs.
::END

$HTTP_CHANGE_LANG$=Allow users to change languages
$HTTP_CHANGE_LANG_TXT$::
The Serv-U Web Client is supported in many languages, but if users should not be able to select their native language this 
can be disabled.
::END
		
		
$ADVANCED_LS_HEADER$=Advanced

$ADVANCED_CHECK_DIRSIZE$=Automatically check directory sizes during upload
$ADVANCED_CHECK_DIRSIZE_TXT$::
Instructs Serv-U to occasionally check the size of directories in which a maximum directory size has been specified.  This attribute ensures that Serv-U always
has updated directory sizes available instead of having to calculate them at transfer time, which can be a time consuming operation.
::END

$ADVANCED_URL_CHARS$=Convert URL characters in commands to ASCII
$ADVANCED_URL_CHARS_TXT$::
Instructs Serv-U to convert special characters contained in command parameters to plain ASCII text.  Certain Web browsers can encode special characters contained
in file names and directories when using the FTP protocol.  This attribute allows Serv-U to decode these special characters.
::END

$ADVANCED_RENAME_OVERWRITE$=Warn end users when using old web browsers
$ADVANCED_RENAME_OVERWRITE_TXT$::
When enabled (default) Serv-U allows files to be renamed to files where the destination already exists.  When disabled users are not allowed to rename a file or 
directory to a path name that already exists.
::END

$ADVANCED_WARN_OLD_BROWSER$=Allow Rename Overwrite
$ADVANCED_WARN_OLD_BROWSER_TXT$::
When enabled (default) Serv-U will warn users that they are using an outdated browser and should upgrade the browser to take advantage of performance and feature enhancements to improve their experience.
::END

$ADVANCED_DISABLE_NAGLE$=Disable usage of Nagle algorithm
$ADVANCED_DISABLE_NAGLE_TXT$::
Disables waiting for the ACK TCP handshake before sending the next packet.  This option is typically only used for connections with very large latencies, such
as satellite links.
::END

$ADVANCED_INLINE_OOB$=Inline out-of-band data
$ADVANCED_INLINE_OOB_TXT$::
Parse out-of-band socket data into the regular TCP data stream, treating it like normal data.   This option is useful to counter denial-of-service attacks
that send large amounts of out-of-band (OOB) data to socket stacks that cannot handle large amounts of OOB data.
::END

$ADVANCED_SEND_KEEPALIVE$=Send keep alive packets to detect broken connections
$ADVANCED_SEND_KEEPALIVE_TXT$::
Periodically sends keep-alive packets to determine if the socket is still connected.
::END

$ADVANCED_ADAPTIVE_TIMEOUT$=Use adaptive time-out on fast file uploads 
$ADVANCED_ADAPTIVE_TIMEOUT_TXT$::
Slowly lower packet time out for consistently fast transfers during file uploads. In case the transfer does not complete successfully, adaptive timeouts makes
it easier to resume the upload since Serv-U recognizes more quickly that the transfer is dead and thus allow access to the file sooner.
::END

$ADVANCED_MAX_SFTP_VER$=Maximum Supported SFTP Version
$ADVANCED_MAX_SFTP_VER_TXT$::
Specifies the maximum verison of SFTP permittted for SFTP connnections.  Serv-U supports SFTP versions 3-6.
::END

<!-- String table for Help-Domain-Settings, Help-Server-Settings -->
$DOMAIN_SETTINGS_HEADER$=Settings

$DOMAIN_SETTINGS_BASICS$::
The Server Settings and Domain Settings tab allows you to configure basic Server or Domain settings that affect performance, security, and network
connectivity.  To configure a setting, simply enter the desired value in the appropriate area and click the <strong>Save</strong> button. For more information
on the settings that can be configured, look below.
::END

$CONNECTION_SETTINGS_HEADER$=Connection Settings

$CONNECTION_SETTINGS_ANTIHAMMER$=Block users who connect more than 'x' times within 'y' seconds for 'z' minutes
$CONNECTION_SETTINGS_ANTIHAMMER_TXT$::
Also known as anti-hammering, enabling this option is a method of preventing brute force password guessing systems from using dictionary style attacks to
locate a valid password for a user account.  Using strong, complex passwords defeats most dictionary attacks.  However, enabling this option ensures that
Serv-U does not waste time processing connections from these illegitimate sources.  When configuring this option, ensure that there is some room available for
legitimate users to correct an incorrect password before they are blocked.

When enabled, this option temporarily blocks IP addresses for 'z' minutes that fail to successfully login after 'x' attempts within 'y' seconds.  IP addresses
blocked in this way can be viewed in the appropriate IP Access rules tab.  A successful login resets the counter tracking attempted logins.
::END

$CONNECTION_SETTINGS_HIDE_SSH_SERVER_ID$=Hide server information from SSH identity
$CONNECTION_SETTINGS_HIDE_SSH_SERVER_ID_TXT$::
After a successful SSH login, the server sents identification information to the client.  Normally, this information includes the server name and version
number.  Enable this option to prevent the information from being given to the client.
::END

$CONNECTION_SETTINGS_DEFAULT_CLIENT$=Default Web Client
$CONNECTION_SETTINGS_DEFAULT_CLIENT_TXT$::
Specifies whether the Web Client or FTP Voyager JV should be used by all HTTP clients by default.  A third option (the default option) is to prompt the
User for the client they want to use instead.  This option is also available at the Group and User level.
::END

$SUPPORT_LINK_HEADER$=Client Support Link
$SUPPORT_LINK_BODY1$::
The Client Support Link is a powerful feature that allows a direct method of contact to be inserted into the Web Client and FTP Voyager JV in the event
that a client requires support or assistance.  The basic syntax for this feature is <strong>protocol:path</strong>.  This option is highly flexible and allows
for any network shortcut to be used, such as:
::END
$SUPPORT_LINK_LIST1$::
<strong>http://www.website.com/support/

mailto:service@website.com?subject=Serv-U File Server Support

aim:goim?screenname=ExampleAdminUser&message=I need help with your Serv-U File Server!</strong>
::END
$SUPPORT_LINK_BODY2$::
Any format can be used as long as the client's machine understands the provided protocol.
::END

$CUSTOM_LOGO_SETTINGS_HEADER$=Custom Logo Settings
$CUSTOM_LOGO_SETTINGS$=Specify a custom logo to be displayed on the login and Web Client pages.
$CUSTOM_LOGO_SETTINGS_TXT$::
Dimensions for custom logos must have a width of 400 pixels and a height of 100 pixels.  If a logo does not meet this criteria an 
error message will appear when you attempt to save the logo.  <strong>Please note:</strong> JPEG images which use CMYK instead of RGB encoding may not work 
properly on certain browsers.  Please test your logo image to make sure it is displaying properly on all browsers.

To add a logo, simply click on the "Browse" button in the "Custom Logo" group box and select the
path to your logo.  Click the "Save" button and the logo will appear below the "Custom Logo Path" input field.  To erase a custom logo, clear the path in the 
the "Custom Logo Path" input field and click the "Save" button.
::END

$PASSWORD_RECOVERY_EMAIL_HEADER$=Password Recovery Email Message
$PASSWORD_RECOVERY_EMAIL$=Send email messages to users with their login credentials using this customizable password recovery message.
$PASSWORD_RECOVERY_EMAIL_TXT$::
The password recovery email message has a simple default subject and message with the user's login ID and password.  This message will be sent if the user
has a valid email address recorded in Serv-U.  Users may request this message from the Serv-U login page.  

Administrators may also send this message to users using the "Recover Password" button under domain users and global users in the Management Console.
::END

$INTEGRATION_DLL_HEADER$=Integration DLL
$INTEGRATION_DLL_TXT$::
For information about writing a Integration DLL, please see the Serv-U Integration Sample DLL installed with Serv-U in the sub-directory entitled "Serv-U 
Integration Sample DLL". The Integration API is documented in this sample. 
::END		
		
$ADVANCED_SETTINGS_HEADER$=Advanced Settings

$ADVANCED_SETTINGS_DIRMASK$=Directory Listing Mask
$ADVANCED_SETTINGS_DIRMASK_TXT$::
Specifies the text string sent to FTP clients for file permissions.  Windows does not support traditional file permissions like Unix making this option largely
cosmetic, however some clients require a certain mask to operate correctly.
::END

$ADVANCED_SETTINGS_MAX_THUMB$=Maximum Simultaneous Thumbnails
$ADVANCED_SETTINGS_MAX_THUMB_TXT$::
Specifies the maximum number of threads that are dedicated towards generating thumbnail images for HTTP clients and in response to the FTP THUMB command.
Generating thumbnails is a CPU intensive operation.  Increasing this value too high may cause thumbnails to take longer to generate, even while Serv-U is
able to handle more client thumbnail requests concurrently.
::END

$ADVANCED_SETTINGS_UPLOAD_ACCESS$=File Upload Access
$ADVANCED_SETTINGS_UPLOAD_ACCESS_TXT$::
Specifies the method in which uploaded files are opened while they are being received from a client.  The default <strong>Allow read access</strong> means
that other clients may attempt to download the file even while it's still being received.  <strong>Allow full access</strong> means other clients can read from
and write to the file while it's being transferred.  To prevent any other client from accessing a file while it's still being transferred, select <strong>Allow
no access</strong>.
::END

$ADVANCED_SETTINGS_DOWNLOAD_ACCESS$=File Download Access
$ADVANCED_SETTINGS_DOWNLOAD_ACCESS_TXT$::
Specifies the method in which downloaded files are opened while they are being sent to a client.  The default <strong>Allow read access</strong> means
that other clients may also attempt to concurrently download the same file.  <strong>Allow full access</strong> means other clients can read from and write to
the file while it's being sent to another client.  To prevent any other client from accessing a file while it's still being sent, select <strong>Allow no
access</strong>.
::END

$NETWORK_SETTINGS_HEADER$=Network Settings

$NETWORK_SETTINGS_UPNP$=Auto-configure firewall through UPnP
$NETWORK_SETTINGS_UPNP_TXT$::
When enabled, Serv-U automatically configures the necessary port forwards in your UPnP-enabled network device (usually a router) so that the File
Server is accessible from outside your network.  This is particularly useful in enabling PASV mode FTP data transfers.
::END

$NETWORK_SETTINGS_PACKET_TO$=Packet Time-Out
$NETWORK_SETTINGS_PACKET_TO_TXT$::
Specifies the timeout, in seconds, for a TCP packet transfer.  Only very slow networks experiencing high levels of latency may need to change this
value from the default 300 seconds.
::END

$NETWORK_SETTINGS_PASV$=PASV Port Range
$NETWORK_SETTINGS_PASV_TXT$::
Specifies the inclusive range of ports that Serv-U should use for PASV mode data transfers.  Serv-U normally allows the operating system to assign it
a random port number when opening a socket for a PASV mode data transfer.  This attribute accommodates routers or firewalls that need to know a
specific range of ports in advance by restricting Serv-U's PASV port range to a known range.  A range of 10 ports is sufficient for the busiest of
File Servers.

<strong>NOTE:</strong> Some NAT routers work differently and may require a larger port range.  If Serv-U and clients have troubles listing directories
or transferring files, try increasing the port range here and on your router.
::END

$OTHER_SETTINGS_HEADER$=Other Settings

$OTHER_SETTINGS_RATIO_FREE$=Ratio Free Files
$OTHER_SETTINGS_RATIO_FREE_TXT$::
Files listed by opening the <strong>Ratio Free Files</strong> button are exempt from Transfer Ratio limitations on file transfers.  Ratio free files
specified at the Server or Domain level are inherited by all their Users accounts.  For more information, see the Help section on $LINK_HELP_RATIOS$.
::END

$OTHER_SETTINGS_ADMIN_PASS$=Change Admin Password
$OTHER_SETTINGS_ADMIN_PASS_TXT$::
The Serv-U Management Console can be password protected when it is launched by double-clicking on the Serv-U system tray icon.  When the Management
Console is running in this way, the option to change the password becomes available.  By default, there is no admin password.
::END


<!-- String table for Help-Custom-FTP-Strings -->
$CUSTOM_FTP_HEADER$=FTP Settings

$CUSTOM_FTP_COMMANDS_BODY1$::
The Serv-U File Server allows for the customization of the FTP commands that it accepts as well as its responses to FTP commands received.   When
configuring these options at the Server level, all Domains inherit these customizations.  To customize the FTP behavior for a specific Domain,
select the appropriate Domain, open the <strong>FTP Settings</strong> tab for the Domain, and click the <strong>Use Custom Settings</strong> button.
At any time, the <strong>Use Default Settings</strong> button can be clicked to have the Domain revert back to the Server's default settings.

Customizing the FTP behavior in this way is not recommended except for those very familiar with the FTP protocol and its standard and extended command
set.
::END

$CUSTOM_FTP_GLOBAL_PROPS$=Global Properties
$CUSTOM_FTP_GLOBAL_PROPS_TXT$::
When using custom settings, the <strong>Global Properties</strong> button becomes available.
::END

$CUSTOM_FTP_GLOBAL_RESP$=Global FTP Responses
$CUSTOM_FTP_GLOBAL_RESP_TXT$::
Global FTP responses are responses shared amongst most FTP commands, such as the error message sent when a file isn't found.  Customizing a global FTP
response ensures that the response is used by all other FTP commands rather than having to customize it for each individual FTP command.  FTP command
responses can contain special macros that allow real-time data to be inserted in to the response.  See the Help section on $LINK_HELP_SYSTEM_VARS$
for more information.
::END

$CUSTOM_FTP_SERVER_MSG$=Server Welcome Message
$CUSTOM_FTP_SERVER_MSG_TXT$::
The Server welcome message is sent in addition to the standard "220 Welcome Message" that identifies the Server to clients when they first connect.
If the <strong>Include response code in text of message file</strong> box is checked, then the 220 response code begins each line of the specified
welcome message.  To customize the welcome message, enter the path to a text file in <strong>Message File Path</strong> input box.  Use the <strong>Browse</strong>
button to select a file on the computer.  Serv-U opens this file and send its contents to connecting clients.
::END

$CUSTOM_FTP_ADVANCED$=Advanced Options
$CUSTOM_FTP_GLOBAL_ADVANCED_TXT$::
<em>Block "FTP_bounce" attacks and FXP (server-to-server transfers)</em> - Checking this box blocks all server-to-server file transfers
involving this Serv-U File Server by only allowing file transfers to the IP address in use by the command channel. For more information on
"FTP_bounce" attacks, see <a href="http://www.cert.org/advisories/CA-1997-27.html" target="_blank">CERT advisory CA-97.27</a>.

<em>Include response code on all lines of multi-line responses</em> - The FTP protocol defines two ways in which a multi-line response can be
issued by an FTP server.  Some older FTP clients have trouble parsing multi-line responses that don't contain the 3-digit response code on each line.
Check this box if your clients are using an FTP client experiencing problems with multi-line responses from Serv-U.

<em>Use UTF-8 encoding for all sent and received paths and file names</em> - By default, Serv-U treats all file names and paths as UTF-8 encoded strings.  It
also sends all file names and paths as UTF-8 encoded strings, such as when sending a directory listing.  Unchecking this option prevents Serv-U from UTF-8
encoding these strings.  When this option is unchecked, UTF8 is not included in the the FEAT command response to indicate to clients that the server is not
using UTF-8 encoding.
::END

$CUSTOM_FTP_EDIT$=Editing FTP Commands & Responses
$CUSTOM_FTP_EDIT_TXT$::
To edit FTP Commands, select the FTP command to edit and click the <strong>Edit</strong> button.
::END

$CUSTOM_FTP_INFO$=Information
$CUSTOM_FTP_INFO_TXT$::
Under the <strong>Information</strong> tab, basic information about the command is shown along with a link to more information on our website.  Each
FTP command can also be disabled by checking the <strong>Disable command</strong> checkbox.  Disabled commands are treated as unrecognized commands
when they are received from a client.
::END

$CUSTOM_FTP_RESPONSES$=FTP Responses
$CUSTOM_FTP_RESPONSES_TXT$::
Under the <strong>FTP Responses</strong> tab, all possible FTP responses to the command as issued by the Server can be modified by clicking on the 
<strong>Edit</strong> button for each response.  FTP command responses can contain special macros that allow real-time data to be inserted in to the
response.  See the Help section on $LINK_HELP_SYSTEM_VARS$ for more information.
::END

$CUSTOM_FTP_MSGFILE$=Message Files
$CUSTOM_FTP_MSGFILE_TXT$::
Certain FTP commands allow a message file to be associated with them.  The contents of a message file are sent along with the standard FTP response.  In
addition, a secondary message file path is available as a default option.  This allows for message files to be specified using a path relative to the
User's home directory for the <strong>Message File</strong>.  If the first message file isn't found, then Serv-U attempts to use the <strong>Secondary
Message File</strong> instead.  By specifying an absolute file path in the secondary location, you can ensure that each User receives a message file.

The following is a list of all FTP commands that allow specifying a message file:
::END
$CUSTOM_FTP_MSGFILE_LIST$::
CDUP
CWD
QUIT
::END

$CUSTOM_FTP_COMMAND_ADVANCED_TXT$::
Some FTP commands contain advanced configuration options that offer additional ways to configure the behavior of the command.  Where available, the
configuration option is described in detail in the Management Console.  The following is a list of FTP commands containing advanced configuration
options:
::END
$CUSTOM_FTP_ADV_COMMAND_LIST$::
LIST
MDTM
NLST
::END


$FTP_RESP_CASEFILE1_HEADER1$=Case File - Custom FTP Command Response
$FTP_RESP_CASEFILE1_BODY1$::
Users connecting to the server need to know how much quota space is available in a given folder when they have completed a transfer. To do this, edit 
the response to the STOR command to include a report on available space. By default, the 226 (command successful) response to the STOR command (which 
stores files on the server) is:

"Transfer complete. $TransferBytes bytes transferred. $TransferKBPerSecond KB/sec."

Modify this to include an extra variable:

"Transfer complete. $TransferBytes bytes transferred. $TransferKBPerSecond KB/sec. Remaining storage space is $QuotaLeft."

The last sentence shows the user how much storage space is left at the end of each file upload. The same can be done for the DELE command, so that
every time a user deletes a file, their updated quota value, showing an increase in available space, is displayed. This can be done for any FTP command
response.
::END


<!-- String table for Help-Encryption -->
$ENCYRPTION_HEADER$=Encryption

$ENCRYPTION_BODY$::
Serv-U supports two methods of encrypted data transfer - Secure Socket Layer (SSL) and Secure Shell 2 (SSH2).  SSL is used to secure the File Transfer
Protocol (FTP) and Hypertext Transfer Protocol (HTTP).  SSH2 is a method of securely interacting with a remote system that supports a method of file
transfer commonly referred to as SFTP.  Despite its name, SFTP does not have anything in common with the FTP protocol itself.

In order for each method of encryption to work, a certificate and/or private key must be supplied.  SSL requires the presence of both, while SSH2 only
requires a private key.  If you do not possess either of these required files, Serv-U can create them for you.

Encryption options specified at the Server level are automatically inherited by all Domains.  Any encryption options specified at the Domain level
automatically overrides the corresponding Server-level option.  Certain configuration options are only available to the Server.
::END

$SSL_SETUP_HEADER$=Configuring SSL for FTPS and HTTPS

$SSL_SETUP_NOTE$::
When creating SSL/TLS, SSH, and HTTPS encrypted Domains within Serv-U, it is important to know that encrypted Domains cannot share listeners. Because
SSL/TLS and SSH encryption is based on encrypting traffic sent between IP addresses, each Domain must have unique listeners in order to operate
properly. In the case that multiple encrypted Domains are created that share listeners, the Domain created first takes precedence causing other
encrypted Domains to fail to function properly. To operate multiple encrypted Domains, modify the listeners of each Domain to ensure they listen on
unique port numbers.
::END

$SSL_SETUP_EXISTING$=Using An Existing Certificate
$SSL_SETUP_EXISTING_LIST$::
Obtain an SSL certificate and private key file from a certificate authority.
Place these files in a secured directory in the server.
Use the appropriate <strong>Browse</strong> button to select both the certificate and private key files.
If a CA (Certificate Authority) PEM file has been issued, enter or browse to the the file.
Enter the password used to encrypt the private key file.
Click the <strong>Save</strong> button.
::END

$SSL_SETUP_EXISTING_TXT$::
If the provided file paths and password are all correct, Serv-U begins using the certificate immediately to secure FTPS and HTTPS connections
using the provided certificate.  If the password is incorrect or Serv-U cannot find either of the provided files, an error message is displayed
that explains the encountered error.
::END

$SSL_CREATE_CERT$=Creating A New Certificate
$SSL_CREATE_CERT_LIST$::
Click the <strong>Create Certificate</strong> button to get started.
Specify the <strong>Certificate Set Name</strong> that is used to name each of the files Serv-U creates.
Specify the output path where the created files are to be placed.  In most cases, the installation directory is a safe location (i.e, C:\Program Files\RhinoSoft.com\Serv-U\).
Specify the city/town in which the server or corporation is located.
Specify the state (if applicable) in which the server or corporation is located.
Specify the 2-digit country code for the country in which the server or corporation is located.
Specify the password used to secure the private key.
Specify the full organization name.
Specify the common name of the certificate.  The IP address or the Fully Qualified Domain Name (FQDN) that Users use to connect must be listed here.  <strong>NOTE:</strong> If the Common Name is not the IP address or FQDN used by clients to connect, clients may be prompted that the certificate does not match the domain name they are connecting to.
Specify the business unit the server resides in.
Click the <strong>Create</strong> button to complete certificate creation.
::END
$SSL_CREATE_CERT_TXT$::
Serv-U creates 3 files using the provided information: A self-signed certificate (.crt) that can be used immediately on the server but isn't
authenticated by any known certificate authority, a certificate request (.csr) that can be provided to a certificate authority for authentication,
and a private key file (.key) that is used to secure both certificate files.  It is extremely important that the private key be kept in a safe and
secure location.  If your private key is compromised, then your certificate can be used by malicious individuals.
::END

$SSL_VIEW_CERT$=Viewing The Certificate
$SSL_VIEW_CERT_TXT$::
To view the SSL certificate once it is configured, click the <strong>View Certificate</strong> button.  All identifying information about the
certificate, including the dates during which the certificate is valid, are displayed in a new dialog.
::END

$SSL_ADVANCED$=Advanced SSL Options
$SSL_ADVANCED_TXT$::
These advanced SSL options can only be configured at the Server level.  All Domains inherit this behavior, which cannot be individually overridden.

<em>Enable Low Security Ciphers</em> - Checking this box enables low-security SSL ciphers to be used.  Some older or international clients may not
support today's best SSL ciphers.  Because these ciphers are considered insecure by today's computing standards, Serv-U does not accept these ciphers
by default.

<em>Disable SSLv2 Support</em> - There are several different versions of SSL supported by Serv-U.  An older version, SSLv2, has documented security
weaknesses that make it less secure than SSLv3 and TLS.  However, it may be necessary to support SSLv2 for compatibility with exported clients or
old client software.  Checking this box disables support for the older SSLv2 protocol.
::END

$FIPS_MODE_HEADER$=FIPS Options
$FIPS_MODE_TXT$::
<em>Enable FIPS 140-2 mode</em> - FIPS 140-2 is a set of rigorously tested encryption specifications set by the National Institute of Standards and
Technology (NIST).  Enabling FIPS 140-2 mode limits Serv-U to encryption algorithms certified to be FIPS 140-2 compliant and ensures the highest level
of security for encrypted connections.
::END

$SFTP_SETUP_HEADER$=SFTP (Secure File Transfer over SSH2)

$SFTP_SETUP_EXISTING$=Using An Existing Private Key
$SFTP_SETUP_EXISTING_LIST$::
Obtain a private key file.
Place the private key file in a secured directory in the server.  Use the <strong>Browse</strong> button in Serv-U to select the file.
Enter the password for the private key file.
Click the <strong>Save</strong> button.
::END

$SFTP_SETUP_CREATE$=Creating A Private Key
$SFTP_SETUP_CREATE_LIST$::
Click the <strong>Create Private Key</strong> button.
Enter the name of the private key, (e.g., "MyDomain Key"), which is also used to name the storage file.
Enter the output path of the certificate, (e.g., C:\Program Files\RhinoSoft.com\Serv-U\).
Select the Key Type (default of DSA is preferred, but RSA is available).
Select the Key Length (default of 1024 bits provides best performance, 2048 bits is a good median, while 4096 bits provides best security).
Enter the password to use for securing the private key file.
::END

$SFTP_KEY_SETUP_HEADER$=SFTP (Secure File Transfer over SSH2) for Users and Groups

$SFTP_SETUP_EXISTING_PUBLIC$=Using An Existing Public Key
$SFTP_SETUP_EXISTING_LIST_PUBLIC$::
Obtain a public key file.
Place the public key file in a secured directory in the server.  Use the <strong>Browse</strong> button in Serv-U to select the file.
Click the <strong>Save</strong> button.
::END

$SFTP_SETUP_CREATE_PAIR$=Creating A Key Pair
$SFTP_SETUP_CREATE_LIST_PAIR$::
Click the <strong>Create Key Pair</strong> button.
Enter the name of the key pair, (e.g., "MyKey"), which is also used to name the storage file.
Enter the output directory of the certificate, (e.g., C:\Program Files\RhinoSoft.com\Serv-U\).
Select the Key Type (default of DSA is preferred, but RSA is available).
Select the Key Length (default of 1024 bits provides best performance, 2048 bits is a good median, while 4096 bits provides best security).
Enter the password to use for securing the key file.
::END


$SFTP_SETUP_CIPHER_MAC$=SSH Ciphers and MACs
$SFTP_SETUP_CIPHER_MAC_TXT$::
By default, all supported SSH ciphers and MACs (Message Authentication Codes) are enabled for use by the Server.  If your specific security needs dictate that
only certain ciphers or MACs can be used, you can individually disable unwanted ciphers and MACs by unchecking the appropriate boxes.
::END


<!-- String table for Help-Domain-Server-Activity -->
$SD_SESSIONS_HEADER$=Server & Domain Sessions

$SD_SESSIONS_TXT$::
The Server & Domain Session tab displays the current File Server session activity.  When viewing the Sessions page from the Server, all connected sessions
from all Domains are displayed.  When viewed while administering a Domain, only that Domain's current sessions are displayed.  From this page, an overall
picture of the current activity on the File Server can be seen.  In addition, individual sessions can be viewed including their current status, connection
state, and transfer information.

To view the detailed information on a specific session, select the session.  The <strong>Active Session Information</strong> group is populated with the
details of the currently highlighted session.  This information is frequently updated to provide you with an accurate and up-to-date snapshot of that session's
activities.

Depending upon the type of connection made by that session, (e.g., FTP, HTTP, or SFTP), certain additional functions are available.
::END

$SD_SESSIONS_DISCONNECT$=Disconnect
$SD_SESSIONS_DISCONNECT_TXT$::
Any type of session can be disconnected at any time by clicking the <strong>Disconnect</strong> button.  Clicking the button brings up another dialog with
additional options for how the disconnect should be performed.  There are 3 types of disconnect options available:
::END
$SD_SESSIONS_DISCONNECT_LIST$::
<em>Disconnect</em> - Immediately disconnects the session.  Another session can be immediately established by the disconnected client.  This is also known as "kicking" the user.
<em>Disconnect and ban IP</em> - Immediately disconnects the session and bans their IP address for the specified number of minutes, preventing them from immediately reconnecting.
<em>Disconnect and block IP permanently</em> - Immediately disconnects the session and adds a deny IP access rule for their IP address, preventing them from ever reconnecting from the same IP address.
::END
$SD_SESSIONS_DISCONNECT_TXT2$::
When disconnecting a session from the Server Session view, an additional option is available called <strong>Apply IP rule to</strong>.  This combo box allows
you to select where you would like the temporary or permanent IP ban to be applied - for the entire Server or just the Domain the session is connected to.

In addition to disconnecting the session, the User account in use by the session can also be disabled by checking the box labeled <strong>Disable user account</strong>.

If the current session is using the FTP protocol, a message can be sent to the user before disconnecting them by typing it in the box labeled <strong>Message
to user</strong>.  This option is not available for HTTP or SFTP sessions as neither protocol defines a method for chatting with users.
::END

$SD_SESSIONS_SPY$=Spy & Chat
$SD_SESSIONS_SPY_TXT$::
Any type of session can be spied on by clicking the <strong>Spy & Chat</strong> button or double-clicking on a session from the list.  Spying on a user
displays all the detailed information normally visible by highlighting the session, but also includes a complete copy of the session's log since it first
connected to the File Server.  This allows an administrator to browse the log and view all actions taken by the session's user.

If the current session is using the FTP protocol, additional options are available for chatting with the user.  The <strong>Chat</strong> group shows all
messages sent to and received from the session since beginning to "spy" on the session.  To send a message to the session, enter the message text in the box
labeled <strong>Message Content</strong> and click the <strong>Send</strong> button.  When a message is received from the session, it is automatically
displayed here.

<strong>NOTE:</strong> Not all FTP clients support chatting with system administrators.  The command used to send a message to the server is SITE MSG.  In
order for a client to receive messages, the client application must be capable of receiving unsolicited responses from the server (instead of just discarding
them).
::END

$SD_SESSIONS_BROADCAST$=Broadcast
$SD_SESSIONS_BROADCAST_TXT$::
A message can be sent to all currently connected FTP sessions by clicking the <strong>Broadcast</strong> button.  Sending a message via broadcast is equivalent
to opening the Spy & Chat dialog to each individual FTP session and sending it a chat message.
::END

$SD_SESSIONS_ABORT$=Abort
$SD_SESSIONS_ABORT_TXT$::
If a session is performing a file transfer, the file transfer can be terminated without disconnecting the session by clicking the <strong>Abort</strong> button.
After confirming the abort command, the current file transfer for that session is terminated by the Server.  Some clients, especially FTP and SFTP clients, may
automatically restart the aborted transfer making it appear that the abort failed.  If this is the case, try <strong>Disconnecting</strong> the session instead.
::END


<!-- String table for Help-Domain-Server-Stats -->
$SD_STATS_HEADER$=Server & Domain Statistics

$SD_STATS_TXT$::
The Server & Domain Statistics pages show detailed statistics on the use of the Server for use in benchmarking and records keeping.  Statistics viewed at the
Server level are an aggregate of those accumulated by all Domains on the Server.  Statistics viewed for an individual Domain are for that Domain only.  The
displayed information includes:
::END

$SD_UP_TIME$=Up Time
$SD_UP_TIME_TXT$::
The amount of time since the File Server was started if viewing Server Statistics, or the amount of time since the Domain came online if viewing a specific
Domain's statistics.
::END

$SD_STATS_SESSION$=Session Statistics

$SD_STATS_SESSION_CURRENT$=Current Sessions
$SD_STATS_SESSION_CURRENT_TXT$::
The number of sessions currently connected.
::END

$SD_STATS_SESSION_DAY$=24 Hrs Sessions
$SD_STATS_SESSION_DAY_TXT$::
The number of sessions that have connected in the past 24 hours.
::END

$SD_STATS_SESSION_TOTAL$=Total Sessions
$SD_STATS_SESSION_TOTAL_TXT$::
The total number of sessions that have connected since being placed online.
::END

$SD_STATS_SESSION_MAX$=Highest Num Sessions
$SD_STATS_SESSION_MAX_TXT$::
The highest number of concurrent sessions that has been recorded since being placed online.
::END

$SD_STATS_SESSION_AVG$=Average Session Length
$SD_STATS_SESSION_AVG_TXT$::
The average length of time a session has remained connected.
::END

$SD_STATS_SESSION_LONGEST$=Longest Session
$SD_STATS_SESSION_LONGEST_TXT$::
The longest recorded time for a session.
::END

$SD_STATS_LOGIN$=Login Statistics
$SD_STATS_LOGIN_TXT$::
These statistics can apply to either a domain or the entire server depending on the statistics currently being viewed.
Login statistics differ from session statistics because they apply to a login (providing a login ID and password)
as opposed to connecting and disconnection.
::END

$SD_STATS_LOGINS$=Logins
$SD_STATS_LOGINS_TXT$::
The total number of successful logins.
::END

$SD_STATS_LOGOUTS$=Logouts
$SD_STATS_LOGOUTS_TXT$::
The total number of logouts.
::END

$SD_STATS_CURRENT_LOGINS$=Currently Logged In
$SD_STATS_CURRENT_LOGINS_TXT$::
The number of sessions currently logged in.
::END

$SD_STATS_MOST_LOGINS$=Most Concurrent Logins
$SD_STATS_MOST_LOGINS_TXT$::
The highest number of simultaneously logged in sessions.
::END

$SD_STATS_LAST_LOGIN$=Last Login Time
$SD_STATS_LAST_LOGIN_TXT$::
The last recorded valid login time (not the last time a connection was made).
::END

$SD_STATS_LAST_LOGOUT$=Last Logout Time
$SD_STATS_LAST_LOGOUT_TXT$::
The last recorded valid logout time.
::END

$SD_STATS_AVERAGE_LOGIN$=Average Duration Logged In
$SD_STATS_AVERAGE_LOGIN_TXT$::
The average login time for all sessions.
::END

$SD_STATS_LONGEST_LOGIN$=Longest Duration Logged In
$SD_STATS_LONGEST_LOGIN_TXT$::
The longest amount of time a session was logged in.
::END

$SD_STATS_SHORTEST_LOGIN$=Shortest Login Duration Seconds
$SD_STATS_SHORTEST_LOGIN_TXT$::
The shortest amount of time a session was logged in.
::END

$SD_STATS_TRANSFER$=Transfer Statistics

$SD_STATS_TRANSFER_DL_SPEED$=Download Speed
$SD_STATS_TRANSFER_DL_SPEED_TXT$::
Cumulative download bandwidth being currently being used.
::END

$SD_STATS_TRANSFER_UL_SPEED$=Upload Speed
$SD_STATS_TRANSFER_UL_SPEED_TXT$::
Cumulative upload bandwidth being currently being used.
::END

$SD_STATS_TRANSFER_AVG_DL_SPEED$=Average Download Speed
$SD_STATS_TRANSFER_AVG_DL_SPEED_TXT$::
The average download bandwidth used since being placed online.
::END

$SD_STATS_TRANSFER_AVG_UL_SPEED$=Average Upload Speed
$SD_STATS_TRANSFER_AVG_UL_SPEED_TXT$::
The average upload bandwidth used since being placed online.
::END

$SD_STATS_TRANSFER_DL$=Downloaded
$SD_STATS_TRANSFER_DL_TXT$::
The total amount of data, and number of files, downloaded since being placed online.
::END

$SD_STATS_TRANSFER_UL$=Uploaded
$SD_STATS_TRANSFER_UL_TXT$::
The total amount of data, and number of files, uploaded since being placed online.
::END

$SD_STATS_SAVE$=Save Statistics
$SD_STATS_SAVE_TXT$::
User and group statistics can be saved directly to a CSV file for programatic analysis and review. In order to save statistics to a file, first select the User
or Group you wish to generate a statistics file for and then click the "Save Statistics" button on the bottom of the page.
::END


<!-- String table for Help-User-Group-Stats -->
$UG_STATS_HEADER$=User & Group Statistics

$UG_STATS_TXT$::
The User & Group Statistics pages show detailed statistics based on individual user or group activity.  Statistics viewed for a user or group are for that user or group only.  The
displayed information includes:
::END

$UG_STATS_SESSION$=Session Statistics

$UG_STATS_SESSION_CURRENT$=Current Sessions
$UG_STATS_SESSION_CURRENT_TXT$::
The number of sessions currently connected.
::END

$UG_STATS_SESSION_DAY$=24 Hrs Sessions
$UG_STATS_SESSION_DAY_TXT$::
The number of sessions that have connected in the past 24 hours.
::END

$UG_STATS_SESSION_TOTAL$=Total Sessions
$UG_STATS_SESSION_TOTAL_TXT$::
The total number of sessions that have connected since being placed online.
::END

$UG_STATS_SESSION_MAX$=Highest Num Sessions
$UG_STATS_SESSION_MAX_TXT$::
The highest number of concurrent sessions that has been recorded since being placed online.
::END

$UG_STATS_SESSION_AVG$=Average Session Length
$UG_STATS_SESSION_AVG_TXT$::
The average length of time a session has remained connected.
::END

$UG_STATS_SESSION_LONGEST$=Longest Session
$UG_STATS_SESSION_LONGEST_TXT$::
The longest recorded time for a session.
::END

$UG_STATS_LOGIN$=Login Statistics
$UG_STATS_LOGIN_TXT$::
These statistics can apply to either a user or a group of users depending on the statistics currently being viewed.
Login statistics differ from session statistics because they apply to a login (providing a login ID and password)
as opposed to connecting and disconnection.
::END

$UG_STATS_LOGINS$=Logins
$UG_STATS_LOGINS_TXT$::
The total number of successful logins.
::END

$UG_STATS_LOGOUTS$=Logouts
$UG_STATS_LOGOUTS_TXT$::
The total number of logouts.
::END

$UG_STATS_CURRENT_LOGINS$=Currently Logged In
$UG_STATS_CURRENT_LOGINS_TXT$::
The number of sessions currently logged in.
::END

$UG_STATS_MOST_LOGINS$=Most Concurrent Logins
$UG_STATS_MOST_LOGINS_TXT$::
The highest number of simultaneously logged in sessions.
::END

$UG_STATS_LAST_LOGIN$=Last Login Time
$UG_STATS_LAST_LOGIN_TXT$::
The last recorded valid login time (not the last time a connection was made).
::END

$UG_STATS_LAST_LOGOUT$=Last Logout Time
$UG_STATS_LAST_LOGOUT_TXT$::
The last recorded valid logout time.
::END

$UG_STATS_AVERAGE_LOGIN$=Average Duration Logged In
$UG_STATS_AVERAGE_LOGIN_TXT$::
The average login time for all sessions.
::END

$UG_STATS_LONGEST_LOGIN$=Longest Duration Logged In
$UG_STATS_LONGEST_LOGIN_TXT$::
The longest amount of time a session was logged in.
::END

$UG_STATS_SHORTEST_LOGIN$=Shortest Login Duration Seconds
$UG_STATS_SHORTEST_LOGIN_TXT$::
The shortest amount of time a session was logged in.
::END

$UG_STATS_TRANSFER$=Transfer Statistics

$UG_STATS_TRANSFER_DL_SPEED$=Download Speed
$UG_STATS_TRANSFER_DL_SPEED_TXT$::
Cumulative download bandwidth being currently being used.
::END

$UG_STATS_TRANSFER_UL_SPEED$=Upload Speed
$UG_STATS_TRANSFER_UL_SPEED_TXT$::
Cumulative upload bandwidth being currently being used.
::END

$UG_STATS_TRANSFER_AVG_DL_SPEED$=Average Download Speed
$UG_STATS_TRANSFER_AVG_DL_SPEED_TXT$::
The average download bandwidth used since being placed online.
::END

$UG_STATS_TRANSFER_AVG_UL_SPEED$=Average Upload Speed
$UG_STATS_TRANSFER_AVG_UL_SPEED_TXT$::
The average upload bandwidth used since being placed online.
::END

$UG_STATS_TRANSFER_DL$=Downloaded
$UG_STATS_TRANSFER_DL_TXT$::
The total amount of data, and number of files, downloaded since being placed online.
::END

$UG_STATS_TRANSFER_UL$=Uploaded
$UG_STATS_TRANSFER_UL_TXT$::
The total amount of data, and number of files, uploaded since being placed online.
::END

<!-- String table for Help-Domain-Server-Log -->
$SD_LOG$=Server & Domain Log

$SD_LOG_TXT$::
The Server & Domain Log tab shows logged activity for the Server or Domain.

The Server Log shows File Server startup, configuration, and shutdown information.  It does not show Domain activity information.  To activity logs, view
the appropriate Domain's log instead.  In addition to status information about libraries, licensing, and the current build that is logged when the File Server
is first starts, the Server Log also contains information about all Domain listener status, Universal Plug-and-Play (UPnP) status information, and PASV port
range status.  The information contained in the Server Log is also saved to a text file located in the installation directory that is named
<strong>Serv-U-StartupLog.txt</strong>.  This file is replaced each time the Serv-U File Server is started.

The Domain Log contains information about and activity pertaining to the currently administered Domain only.  This includes the status of the Domain's listeners
and any configured activity log information.  For more information on the types of activity information that be placed in the Domain Log, see the Help section
entitled $LINK_HELP_LOG_SETTINGS$.

Information contained in the log can be highlighted by clicking and dragging the mouse cursor over the desired portion of the log.  Once highlighted, the
selected portion can be copied to the clipboard.
::END

$SD_LOG_FREEZE$=Freeze Log
$SD_LOG_FREEZE_TXT$::
Check this box to temporarily pause refreshing of the log.  This is useful on busy systems so a certain section of the log can be highlighted and copied
before it is scrolled out of view.  Once finished, uncheck the box to resume automatic updating of the log.
::END

$SD_LOG_SELECT_ALL$=Select All
$SD_LOG_SELECT_ALL_TXT$::
Clicking this button automatically freezes the log and highlights all currently displayed log information so that it can be copied to the clipboard.
::END

$SD_LOG_CLEAR$=Clear Log
$SD_LOG_CLEAR_TXT$::
When the log has become too large for you to view at once, click this button to erase the currently displayed log information.  Only log information received
after clicking the button is displayed.
::END

$SD_LOG_LEGEND$=Legend
$SD_LOG_LEGEND_TXT$::
To make viewing the different components of the log easier, each different type of logged message is color-coded for quick identification.  Clicking this
shows the legend in a draggable dialog.  Drag the legend dialog to a convenient location so it can be used for reference while browsing the log.
::END

$SD_LOG_FILTER$=Filter Log
$SD_LOG_FILTER_TXT$::
To quickly find and read through specific sections of the log, it can be filtered based upon a search string.  Clicking this button brings up the Filter Log
dialog.  Providing a search string and clicking the <strong>Filter</strong> button refreshes the log to only display log entries containing the search string.
To view the entire contents of the log again, open the Filter Log dialog and click the <strong>Reset</strong> button.
::END

$SD_LOG_DOWNLOAD$=Download Log
$SD_LOG_DOWNLOAD_TXT$::
To download the full log file from Serv-U, click the "Download Log" button. If you have permission to download the file your web browser will prompt you to
choose a location to save the file, or begin downloading the file automatically.
::END


<!-- String table for Help-Domain-Overview -->
$DOMAIN_OVERVIEW_HEADER$=Domain Overview

$DOMAIN_OVERVIEW$::
At the core of the Serv-U File Server is the Serv-U Domain. At the most basic level, a Serv-U Domain is set of user accounts and listeners that allow Users to
connect to the Server to access files and folders. Serv-U Domains can also be configured further to restrict access based on IP address, limit bandwidth usage,
enforce transfer quotas, and more.  Virtually every settings available at the Server level can be overridden for each individual domain.  Careful advanced
planning allows you to specify an acceptable level of default options at the Server level to minimize the amount of configuration required for a Domain.

Serv-U can support any number of Domains on the File Server.  Domains can share listeners, or they can each be hosted on a unique IP address if the system has
multiple IP addresses.  However, the maximum number of Domains that can be created on an installation is dictated by the license.  For more information on the
different Editions of Serv-U, see the Help documentation on $LINK_HELP_EDITIONS$.

When running a new installation of the Serv-U File Server for the first time, you are prompted to create your first Domain using the New Domain Wizard.  Follow
the instructions on each page of the wizard to get your first Domain created.  For more information, see the $LINK_HELP_GUIDE$.
::END

$DOMAIN_MANAGING$=Managing Domains
$DOMAIN_MANAGING_TXT$::
The Domain currently being managed is always displayed in the header of each page next to "Managing".  There are several ways in which the active Domain can
be changed.  From the console page of the Serv-U Management Console, the <strong>Manage Domain</strong> button brings up a list of the Domains available on
the File Server.  Double-click a Domain or highlight one and click the <strong>Select</strong> button to make that Domain active.  The Domain list is also
available from any Domain configuration page by clicking the <strong>Change Domain</strong> button found in the footer of the page.

If supported by your license, you can create another new Domain at any time by clicking the <strong>New Domain</strong> button on the console page.  This
button is also directly available from the aforementioned Domain dialog containing the list of available Domains.  After changing the active Domain, the
current page automatically reloads to reflect the new active Domain's settings.

The <strong>Delete</strong> button found on the Domain list dialog immediately deletes a Domain and all of its Users and Groups.  This action cannot be undone.
::END


<!-- String table for Help-Domain-Name-Description -->
$DOMAIN_NAME_DESCRIPTION_HEADER$=Domain Name & Description

$EDITING_NAME_DESCRIPTION$::
Each Domain must be uniquely identified with a <strong>Domain Name</strong>.  If a name is provided that is not unique, an error message is shown indicating
that a unique name is required for each Domain.  The <strong>Domain Name</strong> is used purely for administrative purposes and is not visible or accessible
to Users.

In addition, each Domain can have additional descriptive information associated with it through the <strong>Description</strong>.  Like the <strong>Domain
Name</strong>, the <strong>Description</strong> text is also only available to users with administrative access.  This field is useful for describing the
purpose of the domain or summarizing the resources made available by the Domain's existence on the File Server.

Domains can be temporarily disabled by unchecking the <strong>Enable domain</strong> checkbox.  While disabled, the Domain is completely inaccessible to all
Users.  The Domain still exists on the File Server, all settings are preserved, and it can still be administered while it is disabled.  To make the Domain
accessible to Users again, check the <strong>Enable domain</strong> checkbox.

After making changes to any of the above Domain settings, click the <strong>Save</strong> button to apply the changes.
::END

$DOMAIN_INFO_HOMEDIR$=Domain Home Directory
$DOMAIN_INFO_HOMEDIR_TXT$::
System Administrators can limit the disk space available to a Domain by configuring a home directory for the Domain and specifying a maximum size.  The
Domain's home directory does not affect User directory access rules, nor does it restrict the paths that are available to a User in any way.  However,
in order to calculate the amount of disk space in use by a Domain, Serv-U must know the root directory under which it expects all Domain files to be stored.

To specify the Domain home directory, enter a path in the field labeled <strong>Domain Home Directory</strong>.  The <strong>Browse</strong> button can also
be used to select a path.  When creating a Domain Administrator account for this Domain, it is suggested that their home directory be the same, which ensures
that all Users of the Domain are placed in a subdirectory of the Domain's home directory.  Enter the amount of disk space, in megabytes (MB), available to the
Domain in the <strong>Maximum Size</strong> field.  Leaving this field blank or entering "0" does not impose a maximum size on the Domain.  When a limit is
imposed, any upload that would cause this maximum size to be exceeded is rejected by the Server.

Click the <strong>Save</strong> button to apply these changes.

<strong>NOTE:</strong> Calculating the amount of disk space in use by a Domain can be a time consuming operation depending on the directory structure.
::END


<!-- String table for Help-Domain-Listeners -->
$DOMAIN_LISTENERS_HEADER$=Domain Listeners

$DOMAIN_LISTENERS$::
The Serv-U File Server offers a highly configurable interface for enabling the different file sharing protocols on a Domain.  Listeners are added,
edited, and deleted using the appropriately labeled button.  Each Domain can listen on multiple ports and IP addresses by adding a listener bound
to the desired IP address and port.  In addition to selecting these connection attributes for a listener, a file sharing protocol must also be
selected.  A listing and short description of the file sharing protocols supported by the Serv-U File Server follows.
::END

$DOMAIN_LISTENERS_FUTURE_FEATURE$::
The Serv-U File Server offers a highly configurable interface for enabling the different file sharing protocols on a Domain.  Listeners are added, 
edited, and deleted using the appropriately labeled button.  Each Domain can listen on multiple ports and IP addresses by adding a listener bound 
to the desired IP address and port. In addition to selecting these connection attributes for a listener, a file sharing protocol must also be 
selected. Serv-U supports IPv4 and IPv6 simultaneously, so to offer services to both IPv4 and IPv6 users a listener must be created both for an 
IPv4 address and an IPv6 address.  A listing and short description of the file sharing protocols supported by the Serv-U File Server follows.
::END

$LISTENER_FTP$=FTP - File Transfer Protocol
$LISTENER_FTP_TXT$::
FTP is the traditional protocol for transferring files over the Internet.  It normally operates on the default port 21.  Traditionally, FTP is handled
in plain-text, however SSL connections are explicitly supported through the use of the AUTH command.
::END

$LISTENER_FTPS$=FTPS - File Transfer Protocol using SSL
$LISTENER_FTPS_TXT$::
FTPS is identical to FTP, however connecting to a listener configured for FTPS means that an SSL connection is required before any protocol communication
is performed.  This is commonly referred to as Implicit FTPS, which normally takes place on the default port 990.
::END

$LISTENER_SFTP$=SFTP - Secure File Transfer Using SSH2
$LISTENER_SFTP_TXT$::
SFTP is a secure method of transferring files through a secure shell session.  It performs all protocol communications and data transfers over the same port
eliminating the need to open multiple ports in firewalls as is commonly required when using FTP.  SFTP sessions are always encrypted.  SFTP operates on the
default port 22.
::END

$LISTENER_HTTP$=HTTP - Hypertext Transfer Protocol
$LISTENER_HTTP_TXT$::
HTTP is the protocol used to browse Web sites.  It's also a simple method for downloading and transferring files.  One benefit to adding an HTTP listener to
a Domain is the availability of the Web Client, which allows users to transfers files to and from your File Server without the need for a stand-alone
client.  HTTP traditionally operates on port 80.
::END

$LISTENER_HTTPS$=HTTPS - Hypertext Transfer Protocol using SSL
$LISTENER_HTTPS_TXT$::
HTTPS is identical to HTTP except all communications are secured using SSL.  Like FTPS, a secure connection is implied when connecting to a listener running
the HTTPS protocol.  The default port for HTTPS is 443.
::END

$LISTENER_ADDING$=Adding a Listener
$LISTENER_ADDING_TXT$::
After clicking the <strong>Add</strong> button, the listener configuration dialog is shown.  After configuring each of the listener options, click the
<strong>Save</strong> button to add the listener to the Domain.
::END

$LISTENER_TYPE$=Type
$LISTENER_TYPE_TXT$::
Select the desired file sharing protocol that is to be supported by this listener.  Each listener can only support a single protocol.  To add more file sharing
protocols to the Domain, create new listeners for each protocol.  A brief description of the support file sharing protocols is found above.
::END

$LISTENER_IP_ADDRESS$=IP Address
$LISTENER_IP_ADDRESS_TXT$::
A listener can be bound to a single IP address by entering it here.  If the File Server does not have an external IP address, (e.g., it's behind a router), this
field can be left blank.  Leaving the field blank tells Serv-U to listen on all available IP addresses.
::END

$LISTENER_IP_ADDRESS_TXT_FUTURE_FEATURE$::
A listener can be bound to a single IP address by entering it here. Serv-U supports both IPv4 and IPv6 addresses. If the File Server does not have an external IP 
address, (e.g., it's behind a router), this field can be left blank. If no IP address is specified, the user must select the option to either listen on all available 
IPv4 addresses or all IPv6 addresses. Unless the user is running a purely IPv6 network, it is recommended to use IPv4 addresses and add IPv6 listeners as needed.
::END

$LISTENER_PASV_IP$=PASV IP Address or Domain Name (FTP ONLY)
$LISTENER_PASV_IP_TXT$::
If the listener is supporting the FTP protocol, this additional field is available to specify a separate IP address to use for PASV mode data transfers.  Entering
an IP address here ensures that PASV mode works properly on both unsecured and secured connections.  If the File Server does not have an external IP address, try
using $LINK_DNS4ME$ and entering your DNS4Me domain name in this field.  Serv-U resolves your DNS4Me domain name to ensure it always has the proper external IP
address for PASV command responses.
::END

$LISTENER_SSL_ONLY$=Use only with SSL connections
$LISTENER_SSL_ONLY_TXT$::
This option allows the PASV IP Address or domain name to only be used for SSL connections where it is always necessary to provide the PASV IP Address to
connecting clients. When this option is enabled, the IP Address specified for PASV mode will not be provided to clients connecting via non-SSL FTP.
::END

$LISTENER_USE_LAN$=Use with LAN connections
$LISTENER_USE_LAN_TXT$::
Normally, Serv-U does not use the PASV IP Address for connections coming from the Local Area Network (computers on the same network as Serv-U). When this
option is enabled, the PASV IP Address is also used for LAN connections.
::END

$LISTENER_PORT$=Port
$LISTENER_PORT_TXT$::
The default port for the selected protocol is automatically provided.  However, any port between 1 and 65535 can be used.  When using a non-standard port, clients
must know the proper port in advance when attempting to connect to the Domain.  If using a non-standard port, we recommend using a value above 1024 to prevent
potential conflicts.
::END

$LISTENER_ENABLE$=Enable listener
$LISTENER_ENABLE_TXT$::
A listener can be temporarily disabled by unchecking this box.  While disabled, listeners are displayed with a different icon in the list.
::END

$LISTENER_PURE_VIRTUAL$=Pure Virtual Domains
$LISTENER_PURE_VIRTUAL_TXT$::
Serv-U supports the ability for multiple Domains to "share" the same listeners.  In other words, one Domain can possess the necessary listener configurations
while the other Domain "piggybacks" on the first one.  In this way, the second Domain exists in a virtual way.  To have a Domain "piggyback" on the listener
configurations of existing Domains, leave the listener list blank for the Domain.  The "piggybacking" Domain needs to have at least one
$LINK_HELP_VIRTUAL$ defined for it.

This method of "piggybacking" only works with the FTP and HTTP protocols as they are the only two file sharing protocols that specify a method for identifying
the desired host after a connection is established.  For FTP connections, the client must issue a HOST command to identify the desired domain.  For HTTP
connections, the browser automatically handles providing the necessary host header to Serv-U based upon the domain name used to establish the HTTP connection.
::END


<!-- String table for Help-Virtual-Hosts -->
$VIRTUAL_HOSTS_HEADER$=Virtual Hosts

$VIRTUAL_HOSTS$::
Virtual Hosts provide a way for multiple Domains to share the same IP and Listener port numbers. Normally, each domain listener must use a unique IP address 
and port number combination. With Virtual Hosts, it's possible to host multiple Domains on a system that only has one unique IP address without having to
use non-standard port numbers.  The Domains can share the same listeners by proper implementation of Virtual Hosts.  This feature is only available when the
current license supports hosting multiple Domains.

To configure Virtual Hosts for a Domain, click on the <strong>Add</strong> button and type in the Virtual Host name for the Domain.  The Virtual Host name
is usually the fully qualified domain name used to connect to the Domain such as "ftp.Serv-U.com".

The method used by a client to connect to a desired Virtual Host depends upon the protocol being used to connect to Serv-U.

<strong>FTP</strong><br />
FTP users can use one of two methods to connect to a specific Virtual Host.  If supported by the FTP client, the HOST command can be issued to Serv-U before
login to identify the Virtual Host.  Otherwise, the virtual host can be provided with the login ID in the following format: <em>virtual_host_name</em>|<em>login ID</em>.
The Virtual Host name is entered first, followed by the vertical bar character ('|'), then the login ID.

<strong>SFTP</strong><br />
SFTP users wishing to connect to a specific virtual host must use the specially crafted login ID format as described above in the FTP section.

<strong>HTTP</strong><br />
For HTTP users, the browser automatically provides Serv-U with the hostname used to reach the site allowing Serv-U to identify the Virtual Host from the fully
qualified domain name entered into the browser's navigation bar.
::END

$VIRTUAL_HOSTS_CASEFILE1_HEADER$=Case File - Virtual Hosts

$VIRTUAL_HOSTS_CASEFILE1_BODY$::
Multiple Domains are being configured on the same Server, which has one IP address and two Fully Qualified Domain Names (FQDN) pointing to it. Because Users
connecting to both Domains must use port 21 for connections, configure Virtual Hosts on each Domain so that Serv-U can distinguish between requests for the
two Domains.  After setting up the same listener properties on each Domain, open the Virtual Hosts tab, click <strong>Add</strong>, and then type in the FQDN
that clients should use to connect to the Domain (such as ftp.Serv-U.com).

After connecting to the Server with FTP, Users can send a <strong>HOST ftp.Serv-U.com</strong> command to connect to the appropriate Domain on the File Server.
FTP and SFTP users could also identify the Virtual Host through their login ID of <strong>ftp.Serv-U.com|login ID</strong>.  If connecting via HTTP, Users
can connect to this Domain by visiting <strong>http://ftp.Serv-U.com</strong>.
::END


<!-- String table for Help-Directory-Access -->
$DIRECTORY_ACCESS_HEADER$=Directory Access Rules

$DIR_ACCESS_BASICS$::
Directory Access rules define the areas of the system that are accessible to user accounts.  While traditionally restricted to the User and Group levels,
Serv-U extends the usage of Directory Access rules to both the Domain and Server levels through the creation of global Directory Access rules.  Directory
Access rules specified at the Server level are inherited by all Users of the File Server.  When specified at the Domain level, they are only inherited by
Users belonging to that Domain.  The traditional rules of inheritance apply where rules specified at a lower level, (e.g., the User level), override
conflicting or duplicates rules specified at a higher level, (e.g., the Server level).  

When setting the Directory Access path, the %USER%, %HOME%, %USER_FULL_NAME%, and %DOMAIN_HOME% variables are available to simplify the process. For 
example, use %HOME%/ftproot/ to create a Directory Access rule that specifies the "ftproot" folder in the user's home directory. Directory access rules 
specified in this manner are "portable" in the event that the actual home directory changes while maintaining the same subdirectory structure. This leads 
to less maintenance for the File Server administrator. If the %USER% variable is specified in the path, it is replaced with the user's login ID. This variable 
is useful in specifying a Group's home directory to ensure that Users inherit a logical and unique home directory. The %USER_FULL_NAM% variable can be used to 
insert the "Full Name" value into the path (the user must have a "Full Name" specified for this to function). For example, the user "Tom Smith" could use 
D:\ftproot\%USER_FULL_NAME% for "D:\ftproot\Tom Smith". Finally, the %DOMAIN_HOME% macro may also be used to identify the user's home directory. For example, 
to place a users and their home directory into a common directory use %DOMAIN_HOME%\%USER%.

Directory Access rules are applied in the order they are listed.  The first rule Serv-U encounters in the list that matches the path of a client's request
is the one that's applied for that rule.  In other words, if a rule exists that denies access to a particular subdirectory but is listed <em>below</em> the
rule that grants access to the parent directory, then a User still has access to the subdirectory in question.  The arrows on the right side of the
Directory Access list are used to re-arrange the order in which the rules are applied.

A listing and description of each available directory access permission follows.
::END

$FILE_PERMS_HEADER$=File Permissions

$FILE_PERMS_READ$=Read
$FILE_PERMS_READ_TXT$::
Allows Users to read, (i.e., download) files.  This permission does not allow Users to list the contents of a directory, which is granted by the
<strong>List</strong> permission.
::END

$FILE_PERMS_WRITE$=Write
$FILE_PERMS_WRITE_TXT$::
Allows Users to write, (i.e., upload) files.  This permission does not allow Users to modify existing files, which is granted by the <strong>Append</strong>
permission.
::END

$FILE_PERMS_APPEND$=Append
$FILE_PERMS_APPEND_TXT$::
Allows Users to append data to existing files.  This permission is normally used to grant Users the ability to resume transferring to partially uploaded
files.
::END

$FILE_PERMS_RENAME$=Rename
$FILE_PERMS_RENAME_TXT$::
Allows Users to rename existing files.  Previous versions of Serv-U required <strong>Delete</strong> and <strong>Write</strong> permissions to rename
files.  Starting with version 7.0, <strong>Rename</strong> is an explicit permission.
::END

$FILE_PERMS_DELETE$=Delete
$FILE_PERMS_DELETE_TXT$::
Allows Users to delete files.
::END

$FILE_PERMS_EXECUTE$=Execute
$FILE_PERMS_EXECUTE_TXT$::
Allows Users to remotely execute files.  Execute access is meant for remotely starting programs and usually applies to specific files.  This is a very
powerful permission and great care should be used in granting it to Users.  A User with <strong>Write</strong> and <strong>Execute</strong> permissions
can essentially install any program of their choosing on your system.
::END

$DIR_PERMS_HEADER$=Directory Permissions

$DIR_PERMS_LIST$=List
$DIR_PERMS_LIST_TXT$::
Allows Users to list the files contained in the directory.
::END

$DIR_PERMS_CREATE$=Create
$DIR_PERMS_CREATE_TXT$::
Allows Users to create new directories within the directory.
::END

$DIR_PERMS_RENAME$=Rename
$DIR_PERMS_RENAME_TXT$::
Allows Users to rename existing directories within the directory.  Previous versions of Serv-U required <strong>Delete</strong> and <strong>Write</strong>
permissions to rename directories.  Starting with version 7.0, <strong>Rename</strong> is an explicit permission.
::END

$DIR_PERMS_DELETE$=Delete
$DIR_PERMS_DELETE_TXT$::
Allows Users to delete existing directories within the directory.  <strong>NOTE:</strong>  If the directory contains files, the User also needs to
have the <strong>Delete</strong> files permission in order to delete the directory.
::END

$SUBDIR_PERMS_HEADER$=Subdirectory Permissions
$SUBDIR_PERMS_INHERIT$=Inherit
$SUBDIR_PERMS_INHERIT_TXT$::
Allows all subdirectories to inherit the same permissions as the parent directory.  The <strong>Inherit</strong> permission is appropriate for most
circumstances, but if access must be restricted to subfolders (as is the case when implementing Mandatory Access Control), uncheck Inherit and grant
permissions specifically by folder.
::END

$WINDOWS_USER_ACCESS$=Access as Windows User
$WINDOWS_USER_ACCESS_TXT$::
For a variety of reasons, files and folders may be kept on external servers in order to centralize file storage or provide additional layers of security.
In this environment, files can be accessed by UNC path (\\servername\folder\) instead of the traditional "C:\ftproot\folder" path.  However, accessing
folders stored across the network poses an additional challenge - Windows services are run under the "Local System" account by default, which has no access
to network resources.

To mitigate this problem for all of Serv-U, it is possible to configure the "Serv-U File Server" service to run under a network account.  The alternative,
preferred when many servers exist or if the Serv-U File Server service needs to run under "Local System" for security reasons is to configure a Directory Access
rule to use a specific Windows User for file access.  By clicking on the "Advanced" button it is possible to specify a specific Windows user for each individual
Directory Access rule.  Just like in Windows Authentication, directory access is subject to NTFS permissions, though in this case also to the configured permissions
in Serv-U.
::END

$QUOTA_PERMS_HEADER$=Quota Permissions
$QUOTA_PERMS_MAXSIZE$=Maximum size of directory contents
$QUOTA_PERMS_MAXSIZE_TXT$::
Setting the maximum size actively restricts the size of the directory contents to the specified value.  Any attempted file transfers that cause the
directory contents to exceed this value are rejected.  This feature serves as an alternative to the traditional quota feature that relies upon tracking
all file transfers (uploads and deletions) to calculate directory sizes and is not able to consider changes made to the directory contents outside of
a User's File Server activity.
::END

$DIR_ACCESS_CASEFILE1_HEADER$=Mandatory Access Control
$DIR_ACCESS_CASEFILE1_TXT$::
Serv-U enables the use of Mandatory Access control in cases where Users need to be granted access to the same home directory but should not be able to 
necessarily access the subdirectories below it. To implement Mandatory Access Control at a directory level, simply disable the "Inherit" permission as 
shown below (assume the rule applies to "D:\ftproot\"):
::END
$DIR_ACCESS_CASEFILE1_TXT2$::
Now, the user has access to the "ftproot" folder but to no folders below it. Permissions must individually be granted to subfolders that the user needs 
access to, providing the security of Mandatory Access Control in the Serv-U File Server.
::END

$DIR_ACCESS_CASEFILE2_HEADER$=Restricting File Types
$DIR_ACCESS_CASEFILE2_TXT$::
If Users are using storage space on the Serv-U File Server to store non-work-related files such as MP3 music files, this can be prevented by configuring 
a Directory Access rule placed <strong>above</strong> the main Directory Access Rule (use the arrows on the right to reorder rules) to prevent MP3 files 
from being transferred as shown below. In the text entry for the rule, enter "*.mp3" and use the permissions shown below:
::END

$DIR_ACCESS_CASEFILE2_TXT2$::
The rule denies permission to any transfer of files with the .mp3 extension and can be modified to reflect any file extension. Similarly, if accounting 
employees only need to transfer files with the .mdb extension, configure a pair of rules that grants permissions for .mdb files but denies access to all 
other files, as shown below. In the first rule enter the path that should be the user's home directory or directory they need access to, and in the 
second rule enter the extension of the file that should be accessed (such as "*.mdb"):
::END

$DIR_ACCESS_CASEFILE2_TXT3$::
These rules only allow users to access .mdb files within the directories specified, and can be adapted to any file extension or set of file extensions.
::END


<!-- String table for Help-Virtual-Paths -->
$VIRTUAL_PATHS_HEADER$=Virtual Paths

$VIR_PATHS$::
Virtual Paths allow Users to gain access to files and folders outside of their own home directory.  A Virtual Path only defines a method of mapping an
existing directory to another location on the system to make it visible within a User's accessible directory structure.  In order to actually have access
to the mapped location, the User must still have a Directory Access rule specified for the physical path of a Virtual Path.

Like $LINK_HELP_DIRACCESS$, Virtual Paths can be configured at the Server, Domain, Group, and User levels.  Virtual Paths created at the Server level are
available for use by all Users of the File Server.  When created at the Domain level, they are only accessible by Users belonging to that Domain.  Serv-U's
granular file access controls even allow for Virtual Paths created specifically for individual Users or Groups.
::END

$VIRTUAL_PATHS_PHYSICAL$=Physical Path
$VIRTUAL_PATHS_PHYSICAL_TXT$::
The physical path is the actual location on the system, or network, that is to be placed in a virtual location accessible by a User.  If the physical path
is located on the same computer, a full path should be used, such as "D:\inetpub\ftp\public".  A UNC path can also be used, such as "\\Server\share\public".
In order for a Virtual Path to be visible to a User, they must have a Directory Access rule specified for the physical path.
::END

$VIRTUAL_PATHS_VIRTUAL$=Virtual Path
$VIRTUAL_PATHS_VIRTUAL_TXT$::
The virtual path is the location that the physical path should appear in for the User.  The %HOME% macro is commonly used in the virtual path to place the
specified physical path in the home directory of the User.  When specifying the virtual path, the last specified directory is used as the name displayed in
directory listings to the User.  For example, a virtual path of "%HOME%/public" places the specified physical path in a folder named "public" within the
User's home directory.  A full path without any macros can also be used.
::END

$VIRTUAL_PATHS_INCLUDE_IN_MAX_SIZE$=Include in "Maximum Directory Size" calculations
$VIRTUAL_PATHS_INCLUDE_IN_MAX_SIZE_TXT$::
When checked, the Virtual Path is included in Maximum Directory Size calculations.  When unchecked, the Virtual Path is not included in the Maximum Directory 
Size calculations.  Maximum Directory Size limits the size of directories affecting how much data can be uploaded.
::END

$VIRTUAL_PATHS_CASEFILE1_HEADER$=Case File - Using Virtual Paths

$VIRTUAL_PATHS_CASEFILE1_BODY$::
A Group of web developers have been granted access to the directory "D:\ftproot\examplesite.com\" for web development purposes.  The developers also need
access to an image repository located at "D:\corpimages\".  To avoid granting the Group access to the root D drive, a Virtual Path must be configured so that
the image repository <em>appears</em> to be contained within their home directory.  Within the web developer's Group, add a Virtual Path to "bring the
directory to the users" by specifying "D:\corpimages\" as the <strong>Physical Path</strong> and "D:\ftproot\examplesite.com\corpimages" as the <strong>Virtual
Path</strong>.  Be sure to add a Group level Directory Access rule for "D:\corpimages\" as well.  The developers now have access to the image repository without
compromising security or relocating shared resources.
::END

$VIRTUAL_PATHS_CASEFILE2_HEADER$=Case File - Creating Relative Virtual Paths

$VIRTUAL_PATHS_CASEFILE2_BODY$::
Continuing with the example from above, if the web developer's Group home directory is relocated to another drive, not only does the home directory have to be
updated, but the Virtual Path also needs to be updated to reflect this change.  This can be avoided by using the %HOME% macro to create a relative Virtual
Path location that eliminates the need to update the path should the home directory change.  Instead of using "D:\ftproot\examplesite.com\corpimages" as the
<strong>Virtual Path</strong>, use "%HOME%\corpimages".  This tells Serv-U to place the "corpimages" Virtual Path within the Group's home directory - whatever
that may be.  If the home directory changes at a later date, the Virtual Path still appears there.
::END


<!-- String table for Help-Configure-Logs -->
$DOMAIN_LOGS_HEADER$=Configuring Domain Logs

$CONF_DOMAIN_LOGS$::
The Serv-U File Server allows for a great deal of customization in logging Domain events and activity.  Logging is broken into two sections: File and Screen.  To
enable a logging option, check the appropriate box in the File or Screen column.  When an option is checked from the "File" column, the appropriate logging
information is saved to the specified log file if <strong>Enable logging to file</strong> is checked.  When an option is checked from the "Screen" column, then the
event is displayed in the log when viewed from the Serv-U Management Console.  The log can be configured to show as much or as little information as you desire.
After configuring the desired logging options, click the <strong>Save</strong> button to save the changes.
::END

$DOMAIN_LOG_FILE_SETTINGS$=Logging to File Settings

$DOMAIN_LOG_FILE$=Log file path
$DOMAIN_LOG_FILE_TXT$::
The log file must be given a name before information can be saved to a file.  The <strong>Browse</strong> button can be used to select an existing file or directory
location for the log file.  The log file path supports certain wildcard characters as outlined below.  Wildcard characters referencing the date applies to the day
that the log file is created.  When combined with the <strong>Automatically rotate log file</strong> option, wildcards provide an automatic way to archive Domain
activity for audits, such as those required by HIPAA.  The available wildcard characters are:
::END
$DOMAIN_LOG_FILE_LIST$::
%D - The current day of the month
%M - The name of the current month
%N - The numeric value of the current month (1-12)
%Y - The 4-digit value of the current year, (e.g., %COPYRIGHT_END_YEAR%)
%X - The 2-digit value of the current year, (e.g., %SHORT_COPYRIGHT_END_YEAR% for %COPYRIGHT_END_YEAR%)
%S - The name of the Domain whose activity is being logged
::END

$DOMAIN_LOG_ENABLE_FILE$=Enable logging to file
$DOMAIN_LOG_ENABLE_FILE_TXT$::
Check this box to Serv-U to begin saving log information to the file specified in the <strong>Log file path</strong>.  If this option is not checked, Serv-U does
not log any information to the file, regardless of the individual options checked in the "File" column.
::END

$DOMAIN_LOG_ROTATE$=Automatically rotate log file
$DOMAIN_LOG_ROTATE_TXT$::
To ensure that log files remain a manageable size and can be easily referenced during auditing, Serv-U supports the ability to automatically rotate the log file
on a regular basis.  By specifying a <strong>Log file path</strong> containing wildcards referencing the current date, Serv-U can rotate the log file and create
a unique file name every day, week, month, or year.
::END

$DOMAIN_LOG_PURGE$=Purge Old Log Files
$DOMAIN_LOG_PURGE_TXT$::
Serv-U supports the ability to automatically purge old log files by setting a maximum number of files to keep and/or a maximum size limit in MB's.  Setting these
options to "0" means the setting is unlimited and the limit is not applied.

<strong>CAUTION:</strong> Log files are purged based only on the current log file path name.  Log file variables are replaced with Windows wildcard values used
to search for matching files.  For example:

<strong>C:\Logs\%Y:%N:%D %S Log.txt</strong> is searched for <strong>C:\Logs\????:??:?? * Log.txt</strong><br />
<strong>C:\Logs\%Y:%M:%D %S Log.txt</strong> is searched for <strong>C:\Logs\????:*:?? * Log.txt</strong><br />
<strong>C:\Logs\%S\%Y:%M:%D Log.txt</strong> is searched for <strong>C:\Logs\--DomainName--\????:*:?? Log.txt</strong>

Log variables are wildcarded like this:

%D --&gt; ??<br />
%N --&gt; ??<br />
%M --&gt; *<br />
%Y --&gt; ????<br />
%X --&gt; ??<br />
%S --&gt; *

Anything matching the wildcarded path name can be purged.  Use caution; it's best practice to place log files into a single directory to avoid unexpected
file deletion.
::END

$DOMAIN_LOG_NO_LOG$=Do Not Log IPs
$DOMAIN_LOG_NO_LOG_TXT$::
Serv-U supports the ability to specify IP addresses that are exempt from logging.  Activity from these IP addresses is not logged to the location specified by the
rule - the Screen, a File, or both.  This is useful to exempt IP addresses for administrators that may otherwise generate a lot of logging information that can
obfuscate Domain activity from regular users.  It can also be used to save on log space and reduce overhead.  Simply click the <strong>Do Not Log IPs</strong>
button and add IP addresses as appropriate.
::END


<!-- String table for Help-About-User-Accts -->
$ABOUT_USERS_HEADER$=About User Accounts

$ABOUT_USER_ACCTS$::
A User account is required in order to provide access to the File Server.  At its most basic level, a User account defines login credentials, (i.e., login ID
and password), a home directory, and a set of $LINK_HELP_DIRACCESS$ that defines the areas of the system accessible to the User and the actions they can
perform in those locations.  Each active session on the File Server has a User account associated with it that identifies the client to the administrator.

User accounts can be defined in various ways on the Serv-U File Server, including:
::END

$ABOUT_USERS_LIST$::
<em>Domain Users</em> - Defined at the Domain level, Domain Users can only login to the Domain under which they are created.
<em>Global Users</em> - Defined at the Server level, Global Users are accounts that can login to <strong>any</strong> Domain on the File Server.
<em>Database Users</em> - Available at both the Server and Domain level, Database Users are stored in an external database accessible through ODBC and supplement the local account database.
<em>Windows Users</em> - Defined at the Domain level, Windows Users are Windows accounts either on the local system or accessible through a domain controller that supplement the local account database and allows a client to login to the File Server using their Windows login credentials.
::END

$ABOUT_USER_ACCTS2$::
Since User accounts can be assigned at the various levels with the same login ID, a hierarchy is used by Serv-U to determine which account takes precedence.
The User account types listed above are listed in the order of precedence.  Where User accounts can be specified at both the Domain and Server levels, the
Domain level account always takes precedence over the Server one.

When creating Users, consider what kind of access they need, and select the appropriate location for the User account accordingly - time and effort can be
saved by entering such settings at the Server level to remove the need for multiple User accounts at the Domain level.

On Serv-U Corporate, User accounts can be organized into Collections in order to make account management more logical and organized.  This can be useful when
managing all Users from a department or physical location.  For example, all Users in the accounting department can be placed in a Collection named
"Accounting", or all Users at an office in Topeka can be placed in a collection named "Topeka Users".

To create a Collection, click the <strong>Add</strong> button in the "Users" window within the <strong>Select user collection</strong> group.  In the new
dialog, enter the name of your Collection and click the <strong>Save</strong> button.  Users can now be added this new Collection by selecting it and clicking
the <strong>Add</strong> button below the User list.  To move a User from one Collection to another, click the <strong>Move</strong> button below the User list
and select the destination Collection for the highlighted User accounts.Collections can also be <strong>Renamed</strong> or <strong>Deleted</strong> using the appropriate button.

<strong>NOTE:</strong> When deleting a Collection, all User accounts contained in that Collection are deleted, too.  If the User accounts should be kept, be
sure to move them before deleting the Collection.

By default, all Users are created in the "General" User Collection.	
::END

$ABOUT_USER_WIZARD$=New User Wizard
$ABOUT_USER_WIZARD_TXT$::
A wizard is available to assist in creating a new User account by clicking on the <strong>Wizard</strong> button.  The New User Wizard walks you through the
4 steps required to create a User account with the minimum number of required attributes.  Once created, the User can be edited to configure more advanced
settings such as Group membership or additional Directory Access rules.  For more information on using the New User Wizard, see the <strong>Creating Your
First User Account</strong> section of the $LINK_HELP_GUIDE$.
::END

$ABOUT_USER_TEMPLATE$=User Template
$ABOUT_USER_TEMPLATE_TXT$::
While the New User Wizard offers a way to quickly create a User account with the minimum number of required attributes, most File Server administrators have
a collection of settings they want all User accounts to abide by.  Groups are the best way to accomplish this task, however there are times when it may not
be the desired course of action.

Serv-U allows an administrator to configure a template for new User accounts by clicking on the <strong>Template</strong> button.  Once opened, the template
User can be configured just like any other User account, with the exception of a login ID.  After these settings are saved to the template, all new User
accounts that are manually created are done so with their default settings set to those found within the template.
::END

$ABOUT_USER_COPY$=Copying User Accounts
$ABOUT_USER_COPY_TXT$::
User Templates offer a way for large numbers of users to be created with the same settings. In cases where only the settings of a single user must be duplicated
or there is a need for multiple user templates, the "Copy" button can be used to create a copy of a user account lacking only the username and the password. To
Copy a user, select the user account and choose "Copy".
::END

$ABOUT_USER_PASS_RECOVERY$=Recover Password
$ABOUT_USER_PASS_RECOVERY_TXT$::
Serv-U supports password recovery both through the Management Console and through the Web Client.  For Password Recovery to be available, the SMTP Options for the
Server or Domain must be configured, and the user account must have an email address listed.  To use Password Recovery from the Management Console, select
a user account and click on the "Recover Password" button.  If the password is stored using one-way encryption, the password will be reset and the new password
sent to the user's email address.  If the password is stored using two-way encryption or no encryption, the original password will be sent by email. 

Password Recovery from the Web Client requires that the "Allow users to recover password" limit be enabled for the user account. Once this option is enabled,
users can use the "Recover Password" option in the Web Client as long as they are using a Serv-U Silver or Gold Edition license. Password Recovery
from the Web Client otherwise works the same as from the Management Console. 
::END

$IMPORT_USER_ACCOUNTS$=Importing/Exporting User Accounts
$IMPORT_USER_ACCOUNTS_TXT$::
User accounts can be imported and exported using the "Import" and "Export" buttons on the top of the screen. The "Export" button will export all users in either
the current domain/server or the current Collection to a comma-separated values file (CSV file) which can be viewed in Excel and analyzed by database engines, among other things.  Additionally,
by creating a CSV file using the same format as the export it is possible to import lists of users from CSV files into Serv-U.
::END


<!-- String table for Help-User-Info -->
$USER_INFO_HEADER$=User Information

$USER_INFO_TXT$::
A User account consists of many attributes and settings.  The User Information tab contains general information about the User account including login
credentials, the home directory, and the type of account.  Detailed information on each of the available attributes is found below.
::END

$USER_INFO_USERNAME$=Login ID
$USER_INFO_USERNAME_TXT$::
The login ID is provided by the client as one part of authenticating the session to the File Server.  In addition to the login ID, 
clients must provide a password to complete authentication.  Login IDs must be unique for each account specified at that level.  Login IDs may not
contain any of the following special characters: \ / < > | : ? *.

<strong>NOTE:</strong> There are two special login IDs: "Anonymous" and "FTP".  These login IDs are synonymous with one another and can be used for guests
on your File Server.  These users do not require a password, which should be left blank in this case.  Instead, Serv-U requires users who log on with one of
these accounts to provide their email address to complete the login process.
::END

$USER_INFO_PASSWORD$=Password
$USER_INFO_PASSWORD_TXT$::
The password is the second item required for a session to be authenticated with the File Server.  The password should be kept a secret and not shared with
anyone other than the person that owns the account.  A strong password contains at least 6 characters including a mix of upper and lowercase letters and at
least one number.  Restrictions can be placed on the length and complexity of passwords through limits.  See the Help documentation on $LINK_HELP_USER_LIMITS$
for more information.
::END

$USER_INFO_PASSWORD_GEN_TXT$::
Additionally, the "Lock" icon next to the "Password" field allows a new random password to be generated for a user.  This new password will follow defined
password length requirements.  By default, all passwords are 8 characters long and are complex.  If the "Minimum Password Length" is equal to or less than
four characters, the password will be four characters long - otherwise, generated passwords will follow the specified domain value.
::END


$USER_INFO_ADMIN$=Administration Privilege
$USER_INFO_ADMIN_TXT$::
A User account can be granted one of three types of administrative privileges: No Privilege, System Administrator, or Domain Administrator.  The value of this
attribute can be inherited through Group membership.

A User account with No Privilege is a regular user account that can only login to transfer files to and from the File Server.  The Serv-U Management Console
is not available to these User accounts.

A System Administrator has the ability to perform any File Server administration activity including creating and deleting Domains, User accounts, or even
updating the File Server's license.  A User account with System Administrator privileges that is logged in through HTTP remote administration can essentially
administer the server as they had physical access to the machine.

A Domain Administrator can only administrative duties for the Domain to which their account belongs.  A Domain Administrator is also restricted from performing
Domain-related activities that may affect other Domains.  The Domain-related activities that may <em>not</em> be performed by Domain Administrators consists of
configuring their Domain listeners or configuring ODBC database access for the Domain.
::END

$USER_INFO_ADMIN_READ_ONLY$::
Serv-U also supports read-only administrator accounts which can allow administrators to log in and view configuration options at the domain or server level,
greatly aiding remote problem diagnosis when working with outside parties. Read-only administrator privileges are identical to their full-access equivalents,
except that they cannot change any settings or create/delete/edit user accounts.
::END

$USER_INFO_ADMIN_NOTE$::
<strong>NOTE:</strong> When configuring a User account with administrative privileges, take care in specifying their home directory.  An administrator with a
home directory other than "\" (root) that is locked in their home directory may not use file paths outside of their home directory when configuring the File
Server.
::END

$USER_INFO_TYPE$=Account Type
$USER_INFO_TYPE_TXT$::
By default, all accounts are permanent and exist on the File Server until manually deleted or disabled.  An account can be configured to be automatically 
disabled or even deleted on a specified date by configuring the <strong>Account Type</strong>.  After selecting the appropriate type, the <strong>Account
Expiration Date</strong> control appears.  Click on the calendar or expiration date to select when the account should be disabled or deleted.
::END

$USER_INFO_WEB_CLIENT$=Default Web Client
$USER_INFO_WEB_CLIENT_TXT$::
If your Serv-U license enables the use of FTP Voyager JV, then users connecting to the File Server through HTTP can choose which client they want to use after
logging in.  Instead of asking users which client they want to use, a default client can also be specified.  If this option is changed, it overrides the option
specified at the Server or Domain level.  It can also be inherited by a User through Group membership.  Use the <strong>Inherit default value</strong> option
to reset it to the appropriate default value.
::END

$USER_INFO_EMAIL_ADDRESS$=Email Address
$USER_INFO_EMAIL_ADDRESS_TXT$::
Serv-U Events can use the "Email Address" field when sending email notifications to groups, and password recovery using the Web Client requires an email address
to send a recovered password to a user.  Enter an email address here to allow email notifications or password recovery for the user account.
::END

$USER_INFO_ENABLE$=Enable account
$USER_INFO_ENABLE_TXT$::
Uncheck this box to disable the current account.  Disabled accounts remain on the File Server but cannot be used to login.  To re-enable the account, check the
<strong>Enable account</strong> box again.
::END

$USER_INFO_FULL_NAME$=Full Name
$USER_INFO_FULL_NAME_TXT$::
The full name of the account is available to specify additional identifying information about the account.  It is not used by clients when they login.
::END

$USER_INFO_PASS_TYPE$=FTP Password Type
$USER_INFO_PASS_TYPE_TXT$::
All passwords are stored in an encrypted, unreversible state in Serv-U's configuration files (unless the File Server is configured to not encrypt stored
passwords through a $LINK_HELP_USER_LIMITS$).  In addition to the <strong>Regular Password</strong> option, two additional types of password storage are
available for accounts that use the FTP protocol: <strong>MD4</strong> and <strong>MD5</strong> OTP S/KEY passwords.  This type of password setting allows the
user to login via FTP without sending the password to the File Server as plain text.  These options only apply to the FTP protocol.  Setting this option does
not affect a User's ability to login via other protocols.
::END

$USER_INFO_HOMEDIR$=Home Directory
$USER_INFO_HOMEDIR_TXT$::
The home directory for a User account is where the User is placed immediately after logging in to the File Server.  Each User must have a home directory
assigned to it, although it can be specified at the Group level if the User is a member of a Group.  Home directories must be specified using a full path
including the drive letter or UNC share name.  If the home directory is not found, Serv-U can be configured to create it.

When specifying the home directory, the %USER% macro can be used to insert the login ID in to the path.  This is used mostly to configure a default home
directory at the Group level or within the new User template to ensure that all new Users have a unique home directory.  When combined with a Directory Access
Rule for %HOME%, a new User can be configured with a unique home directory and the proper access rights to that location with a minimal amount of effort.

The %DOMAIN_HOME% macro may also be used to identify the user's home directory.  For example, to place a user's home directory into a commmon location use
%DOMAIN_HOME%\%USER%.

The home directory can be specified as "\" (root) in order to grant system-level access to a User, allowing them the ability to access all system drives.  In
order for this to work properly, the User must not be locked in their home directory.
::END

$USER_SSH_PUBLIC_PATH$=SSH Public Key Path
$USER_SSH_PUBLIC_PATH_TXT$::
The SSH public key can be used to authenticate a user when logging into the the Serv-U File Server. The public key path should point to the key file in a secured 
directory on the server. This path can include the following macros:

%HOME% - The Home Directory of the user account<br />
%USER% - The Login ID, used if the public key will have the Login ID as part of the file name<br />
%DOMAIN_HOME% - The Home Directory the Domain, set in Domain Details | Settings, used if the keys will be in a central folder relative to the domain Home Directory

Examples:

%HOME%\SSHpublic.pub<br />
%HOME%\%USER%.pub<br />
%DOMAIN_HOME%\SSHKeys\%USER%.pub

<a href="Help-SSH-Key-Pair.htm">Click here</a> for information on creating a SSH key pair.
::END

$USER_INFO_LOCK_HOMEDIR$=Lock user in home directory
$USER_INFO_LOCK_HOMEDIR_TXT$::
A user that is locked in their home directory may not access paths above their home directory.  In addition, the actual physical location of their home
directory is masked as Serv-U always reports it as "/" (root).  The value of this attribute can be inherited through Group membership.
::END


$USER_INFO_ALWAYS_LOGIN$=Always Allow Login
$USER_INFO_ALWAYS_LOGIN_TXT$::
Enabling this option means that the User account is always permitted to login, regardless of restrictions placed upon the File Server such as IP access rules
or a maximum number of sessions.  It is useful as a fail-safe in order to ensure that critical system administrator accounts can always remotely access the
File Server under all conditions.  As with any option that allows bypassing access rules, care should be taken in granting this ability.  The value of this
attribute can be inherited through Group membership.
::END

$USER_INFO_DESCRIPTION$=Description
$USER_INFO_DESCRIPTION_TXT$::
The description allows for the entry of additional notes that are only visible by administrators.
::END

$LOGIN_AVAILABILITY$=Availability
$LOGIN_AVAILABILITY_TXT$::
This feature limits when users can connect to this server. Limitations may be placed on the time-of-day as well as the day-of-the-week.  When logging in outside the specified available times users are presented a message that the user account is currently unavailable.
::END


<!-- String table for Help-User-Groups -->
$USER_GROUPS_HEADER$=Group Memberships

$USER_GROUPS_OLD$::
A User can be a member of any number of Groups.  Groups provide a convenient way of applying a base set of User attributes and settings to multiple Users.
For more information on configuring Groups, see the Help documentation on $LINK_HELP_GROUPS$.

Because a User can be a member of multiple Groups, the order in which Group memberships are presented is important.  The first Group membership for a User
encountered by Serv-U for a User that provides a value for an attribute is the value that is used.  Use the arrows on the right side of the Group membership
list to re-arrange the order of Group memberships as desired.

Use the <strong>Add</strong> and <strong>Delete</strong> buttons to add additional Group memberships to the User or remove the User from the
selected Groups, respectively.
::END

$USER_GROUPS$::
A User can be a member of any number of Groups.  Groups provide a convenient way of applying a base set of User attributes and settings to multiple Users.
For more information on configuring Groups, see the Help documentation on $LINK_HELP_GROUPS$.

Because a User can be a member of multiple Groups, the order in which Group memberships are presented is important.  The first Group membership for a User
encountered by Serv-U for a User that provides a value for an attribute is the value that is used.  Use the arrows on the right side of the Group membership
list to re-arrange the order of Group memberships as desired.

Use the <strong>left</strong> and <strong>right</strong> arrow buttons to add additional Group memberships to the User or remove the User from the
selected Groups, respectively.
::END


<!-- String table for Help-Welcome-Message -->
$WELCOME_MESSAGE_HEADER$=Welcome Message

$WELCOME_MESSAGE_BODY$::
The welcome message is a message that is traditionally sent to the FTP client during a successful User login.  Serv-U extends this ability to HTTP so that
Users accessing the File Server through the Web Client or FTP Voyager JV also receive the welcome message.  This feature is not available to Users
logging in via SFTP over SSH2 as the protocol does not define a method for sending general text information to the User.

The welcome message can contain general information about the Server's status, a special message for the User, disclaimers, or other legal notices.  There are
two ways to configure a welcome message. The first method involves specifying the path to a file containing the desired welcome message in the
<strong>Message File Path</strong> field.  The <strong>Browse</strong> button can be used to select an existing file on the system.  

As an alternative, the text of the welcome message can be explicitly provided to Serv-U in the space provided.  In order to override an explicit welcome
message at the User level, the <strong>Override inherited group welcome message</strong> box must be checked first.  The provided text is then sent to the
User instead of the contents of the file specified in the <strong>Message File Path</strong> field.

These values can be inherited by the User through Group membership.

System variables are also available which can be used in the welcome message. For a comprehensive list of the available system variables, see the Help
documentation on $LINK_HELP_SYSTEM_VARS$.
::END


<!-- String table for Help-Quotas-Ratios -->
$QR_HEADER$=Transfer Ratio and Quota Management

$QR_TXT$::
Transfer Ratios and Quotas are just one of the many ways in which file transfers are managed on the Serv-U File Server.  For more information on each of these
options, continue reading.
::END

$QR_RATIOS$=Transfer Ratio
$QR_RATIOS_TXT$::
Transfer ratios are a convenient way of encouraging file sharing on your File Server.  By specifying an appropriate transfer ratio setting, you can grant
"credits" to the User for transferring a specified number of bytes or complete files.  This is commonly used to grant a User the ability to download 'x'
megabytes of data or files for every 'y' megabytes of data or files that they upload.

To enable transfer ratios for the current User account, check the box labeled <strong>Enable transfer ratio</strong>.  Select the appropriate type of ratio
to impose on the User account.  Ratios can be tracked in terms of megabytes or complete files.  They can also be tracked per session established or for all
sessions established by the User account.

The ratio itself is configured by assigning a numeric value to both the <strong>Uploads</strong> and <strong>Downloads</strong> side of the ratio.  For
example, a 3/1 ratio that is counting files over all sessions means that the User account must upload 3 files in order to have the ability to download 1 file.
The current credit for the User account is displayed in the <strong>Credit</strong> field.  This value is the current value and can be initialized to a
non-zero value to grant the User initial credits.
::END

$QR_QUOTA$=Quota
$QR_QUOTA_TXT$::
Quotas are another way to limit the amount of data that is transferred by a User account.  When a <strong>Maximum</strong> quota value is assigned to the User,
they are not able to use more disk space than that value.  The <strong>Current</strong> field shows how much disk space is currently being used by the User
account.  When initially configuring a quota, both fields must be filled in.  From that point on, Serv-U tracks the file uploads and deletions made by the
User and updates the <strong>Current</strong> value as appropriate.

<strong>NOTE:</strong> One considerable drawback to using quotas is that in order for the <strong>Current</strong> value to remain accurate, changes must not
be made to the contents of the directories that are accessible by the User account outside of Serv-U.  Because these changes take place outside of a File
Server connection, Serv-U cannot track them and update the current quota value.  As an alternative to quotas, consider imposing a maximum size on the contents
of a directory when specifying the Directory Access rules for the User account.  For more information on this option, see the Help documentation on
$LINK_HELP_DIRACCESS$.
::END

$QR_FREE_FILES$=Ratio Free Files
$QR_FREE_FILES_TXT$::
Files listed in the ratio free file list are exempt from any imposed transfer ratios.  In other words, if a User must upload files in order to earn credits
towards downloading a file, a file that matches an entry in this list can always be downloaded by Users, even if they have no current credits.  This is
commonly used to make special files, such as a "read me" or a directory information file, always accessible by Users.

The '*' and '?' wildcard characters may be used when specifying a ratio free file.  Using '*' specifies a wildcard of any kind of character and any length.
For example, entering "*.txt" makes any file with a .txt extension free for download, regardless of the actual filename.  A '?' may be used to represent a
single character within the filename or directory.

In addition, full or relative paths may be used when making an entry.  If a full path is used when specifying a filename, then only that specific file is
exempt from transfer ratios.  If a relative path is used, such as entering just "readme.txt", then the provided file is exempt from transfer ratios regardless
of the directory it is located in.
::END


<!-- String table for Help-Windows-Auth -->
$WINDOWS_AUTH_HEADER$=Windows Authentication

$WINDOWS_AUTH_BASICS$::
By enabling Windows authentication, Users can login to Serv-U using their Windows
login credentials as provided by the local Windows account database or a specific Windows Domain Server.  When logging in using their Windows account, Users
are placed in the home directory for their Windows account eliminating the need to manually specify a home directory.

To enable Windows authentication, check the box labeled <strong>Enable Windows authentication</strong>.  If the <strong>Windows Domain Name</strong> field
is left empty, Serv-U uses the system's local Windows account database to authorize User logins.  If the system is a member of a Windows Domain, the domain
name can be entered in this field to have User logins authorized by the Domain Server.  After changing this field, click the <strong>Save</strong> button
to apply the changes.
::END

$WINDOWS_AUTH_USE_GROUP_HOMEDIR$=Use Windows User Group home directory instead of account home directory
$WINDOWS_AUTH_USE_GROUP_HOMEDIR_TXT$::
By default, Serv-U uses the Windows account's home directory when a client logs in using a Windows User account.  Enabling this option causes Serv-U to use the
home directory specified in the Windows User Group instead.  If no home directory is specified at the group level, then the Windows User account's home
directory is still used.
::END

$WINDOWS_AUTH_GROUP$=Configure Windows User Group
$WINDOWS_AUTH_GROUP_TXT$::
Windows User accounts are not visible or configurable on an individual basis in Serv-U.  To aid in configuring the many advanced options of a local User
account, all Windows User accounts are a member of a special Windows User Group.  Clicking the <strong>Configure Windows User Group</strong> button allows
this Group to be configured just like a normal Group.  All settings configured in this Group are inherited by Windows User accounts.  This feature can be
used to add IP access rules, specify bandwidth limitations, or add additional Directory Access rules.

For more information, see the Help documentation section on configuring $LINK_HELP_GROUPS$.
::END


<!-- String table for Help-About-Groups -->
$ABOUT_GROUPS_HEADER$=About Groups

$ABOUT_GROUPS_TXT$::
Groups are a method of sharing common configuration options with multiple User accounts.  Configuring a Group is just like configuring a User account.
Virtually every configuration option available for a User account can be set at the Group level.  In order for a User to inherit a Group's settings, it must
be a member of the Group.  Permissions and attributes inherited by a User through Group membership can still be overridden at the User level.  A User can be a
member of multiple Groups in order to acquire multiple collections of permissions, such as directory or IP access rules.

Like User accounts, Groups can be created at multiple different levels, including:
::END

$ABOUT_GROUPS_TYPES$::
Global Groups
Domain Groups
Database Groups - available at both the Server and Domain levels
Windows Groups
::END

$ABOUT_GROUPS_TXT2$::
However, Groups are only available to User accounts that are defined at the same level.  In other words, a Global User, (i.e., a User defined at the Server
level), can only be a member of a Global Group.  Likewise, a User defined for a specific Domain can only be a member of a Group also created for that Domain.
This restriction also applies to Groups created in a database in that only Users created within a database at the same level can be members of those Groups.

Use the <strong>Add</strong>, <strong>Edit</strong>, and <strong>Delete</strong> buttons to manage the available Groups.
::END

$ABOUT_GROUPS_TEMPLATE$=Group Template
$ABOUT_GROUPS_TEMPLATE_TXT$::
Serv-U allows an administrator to configure a template for creating new Groups by clicking on the <strong>Template</strong> button.  Once opened, the template
Group can be configured just like any other Group object, with the exception of giving it a name.  After these settings are saved to the template, all new
Groups are created with their default settings set to those found within the template.  This is a great way to configure some basic settings that you want all
of your Groups to use by default to save you time when creating new Groups.
::END

$ABOUT_GROUPS_NTUSER$=Configure Windows User Group
$ABOUT_GROUPS_NTUSER_TXT$::
Administrators have the ability to allow clients to login to the File Server using the local Windows user database or one that
is made accessible through a domain server.  These User accounts do not exist in the local Serv-U User database and cannot be configured on an individual basis.
To aid in configuring these accounts, all Users logged in through this method belong to the Default Windows User Group.  Clicking this button allows this Group
to be configured like normal.  However, changes that are made to this Group only apply to Windows User accounts.
::END

$ABOUT_GROUPS_WIN$=Windows Groups
$ABOUT_GROUPS_WIN_TXT$::
Windows groups represent settings for your Windows Organizational Units (OU). The Windows groups layout must match Windows OUs by using the same names used in  your 
domains' Active Directory configuration. 
::END


<!-- String table for Help-Group-Information -->
$GROUP_INFO_HEADER$=Group Information

$GROUP_INFO$::
Virtually every attribute available for a User account can be configured at the Group.  Group level settings are inherited by the Group members and can be
overridden at the User level.  The Group Information tab contains general information about the Group including the name, home directory, and the default
administrative privilege for Group members.  Detailed information on each of the available attributes is found below.
::END

$GROUP_INFO_NAME$=Group Name
$GROUP_INFO_NAME_TXT$::
The Group name is a unique identifier that must be unique for each Group specified at that level (Server or Domain).  Group names may not contain any of the
following special characters: \ / < > | : ? *.
::END

$GROUP_INFO_DIRACCESS$=Apply group directory access rules first
$GROUP_INFO_DIRACCESS_TXT$::
As outlined in the Help documentation section on $LINK_HELP_DIRACCESS$, the order in which Directory Access Rules are listed has significance in determining
the resources that are available to a User account.  By default, Directory Access Rules specified at the Group level take precedence over ones specified
at the User level.  However, there are certain instances where this you may want the User level rules to take precedence.  Unchecking this box places the
Group's Directory Access Rules <em>below</em> the User's.
::END


<!-- String table for Help-Group-Members -->
$GROUP_MEMBERS_HEADER$=Group Members

$GROUP_MEMBERS$::
The User accounts that are members of the currently selected Group are displayed on this tab.  It can be used to get a quick overview of what Users are
currently inheriting the Group's settings at this time.  Currently, Users cannot be added or removed from the Group using this interface.  Adding or
removing a Group membership must be done from the appropriate User's account properties window.
::END


<!--  String table for Help-System-Variables.htm -->
$SYSTEM_VARIABLES_HEADER$=System Variables
$SYSTEM_VARIABLES_BODY1$::
Certain configurable messages in Serv-U can be customized to include a wide range of variables as outlined in the list below.  These variables are replaced
at run-time with the appropriate value allowing up-to-date statistics and feedback to be provided to logged in Users.  Some of the places where these
variables can be used include in Event messages, a customized FTP command response, or a Welcome Message.

All available variables and a short explanation of each is included below.  Statistical information, unless otherwise specified, is calculated since the
Serv-U File Server was last started.
::END

$SYS_VARS_SERVER_INFO$=Server Information
$SYS_VARS_SERVER_INFO_LIST$::
$ServerName - The full name of the server, (i.e., Serv-U)
$ServerVersionShort - The first two digits of the current version of the Serv-U File Server, (e.g., 7.0)
$ServerVersionLong - The full version number of the Serv-U File Server, (e.g., 7.0.0.3)
$OS - The name of the operating system, (e.g., Windows XP)
$OSVer - The full version number of the operating system, (e.g., 5.1.2600)
::END

$SYS_VARS_SERVER_INFO_LIST_FUTURE_FEATURE$::
$OSAndPlatform - The name of the operating system, (e.g., Windows XP) and platform (e.g., 32-bit or 64-bit)
$ComputerName - The name of the computer retrieved from the operating system, normally the same as the UNC name on a Windows network (e.g., WEB-SERVER-01)
$LogFilePath - Retrieves the path to the log file (Log File Deleted Event only)
::END

$SYS_VARS_SERVER_STATS$=Server Statistics
$SYS_VARS_SERVER_STATS_LIST$::
$ServerDays - The total number of days the Server has been online continuously
$ServerHours - The number of hours from 0 to 24 the Server has been online, carries over to $ServerDays
$ServerMins - The number of minutes from 0 to 60 the Server has been online, carries over to $ServerHours
$ServerSecs - The number of seconds from 0 to 60 the Server has been online, carries over to $ServerMins
$ServerKBup - The total number of kilobytes uploaded
$ServerKBdown - The total number of kilobytes downloaded
$ServerFilesUp - The total number of files uploaded
$ServerFilesDown - The total number of files downloaded
$ServerFilesTot - The total number of files transferred, essentially ($ServerFilesUp + $ServerFilesDown)
$LoggedInAll - The total number of established sessions
$ServerUploadAvgKBps - The average upload rate in KB/s
$ServerDownloadAvgKBps - The average download rate in KB/s
$ServerAvg - The average data transfer rate (uploads and downloads) in KB/s
$ServerUploadKBps - The current upload transfer rate in KB/s
$ServerDownloadKBps - The current download transfer rate in KB/s
$ServerKBps - The current aggregate data transfer rate in KB/s
$ServerSessions24HPlusOne - The total number of sessions in the past 24 hours plus one additional session
$ServerSessions24H - The total number of sessions in the past 24 hours
::END

$SYS_VARS_DOMAIN_STATS$=Domain Statistics
$SYS_VARS_DOMAIN_STATS_LIST$::
$DomainKBup - The total number of kilobytes uploaded
$DomainKBdown - The total number of kilobytes downloaded
$DomainFilesUp - The total number of files uploaded
$DomainFilesDown - The total number of files downloaded
$DomainFilesTot - The total number of files transferred, essentially ($DomainFilesUp + $DomainFilesDown)
$DomainLoggedIn - The total number of sessions currently connected
$DomainUploadAvgKBps - The average upload rate in KB/s
$DomainDownloadAvgKBps - The average download rate in KB/s
$DomainAvg - The average aggregate data transfer rate (uploads and downloads) in KB/s
$DomainUploadKBps - The current upload transfer rate in KB/s
$DomainDownloadKBps - The current download transfer rate in KB/s
$DomainKBps - The current aggregate data transfer rate in KB/s
$DomainSessions24HPlusOne - The total number of sessions in the past 24 hours plus one additional session
$DomainSessions24H - The total number of sessions in the past 24 hours
::END

$SYS_VARS_USER_STATS$=User Statistics - Applies to all sessions attached to the User account
$SYS_VARS_USER_STATS_LIST$::
$UserKBUp - The total number of kilobytes uploaded
$UserKBDown - The total number of kilobytes downloaded
$UserKBTot - The total amount of kilobytes transferred
$UserLoggedIn - The total number of sessions
$UserUploadAvgKBps - The average upload rate in KB/s
$UserDownloadAvgKBps - The average download rate in KB/s
$UserAvg - The average aggregate data transfer rate (uploads and downloads) in KB/s
$UserUploadKBps - The current upload transfer rate in KB/s
$UserDownloadKBps - The current download transfer rate in KB/s
$UserKBps - The current aggregate data transfer rate in KB/s
$UserSessions24HPlusOne - The total number of sessions in the past 24 hours plus one additional session
$UserSessions24H - The total number of sessions in the past 24 hours
::END

$SYS_VARS_LAST_TRANSFER_STATS$=Last Transfer Statistics - Applies to the most recently completed successful data transfer
$SYS_VARS_LAST_TRANSFER_STATS_LIST$::
$TransferBytesPerSecond - The effective (compressed) transfer rate in bytes/s
$TransferKBPerSecond -  The effective (compressed) transfer rate in KB/s
$TransferBytes - The effective (compressed) number of bytes transfered, formatted for display, e.g., 32,164
$NoFormatTransferBytes - The effective (compressed) number of bytes transfered, unformatted, e.g., 32164
$TransferKB - The effective (compressed) number of kilobytes transfered, formatted for display
$ActualTransferBytesPerSecond - The actual (uncompressed) transfer rate in bytes/s
$ActualTransferKBPerSecond - The actual (uncompressed) transfer rate in KB/s
$ActualTransferBytes - The actual (uncompressed) number of bytes transfered, formatted for display, e.g., 32,164
$NoFormatActualTransferBytes - The actual (uncompressed) number of bytes transfered, unformatted, e.g. 32164
$ActualTransferKB - The actual (uncompressed) number of kilobytes transfered, formatted for display
$CompressionRatio - The ratio of compression for the transfer expressed as a percentage of the expected amount of data transfered. For example, a value of 100.00 means the data could not be compressed.  A value of 200.00 means the data compressed to half its original size.
$CurrentCompressedTransferBytes - The current effective (compressed) number of bytes transfered so far, unformatted, e.g., 32164 (FTP only)
$CurrentUncompressedTransferBytes - The current actual (uncompressed) number of bytes transfered so far, unformatted, e.g. 32164 (FTP only)
::END

$SYS_VARS_DATE$=Date/Time
$SYS_VARS_DATE_LIST$::
$Date - The current date according to the Serv-U File Server, in the system's local date format
$Time - The current time according to the Serv-U File Server, in the system's local time format
::END

$SYS_VARS_SERVER_SETTINGS$=Server Settings
$SYS_VARS_SERVER_SETTINGS_LIST$::
$MaxUsers - The maximum number of sessions allowed to login, which could be limited by the license
$MaxAnonymous - The maximum number of anonymous users allowed to login
::END

$SYS_VARS_USER_INFO$=Session Information - Applies to the current session
$SYS_VARS_USER_INFO_LIST$::
$Name - The login ID of the attached User account
$IP - The client IP address
$IPName - The reverse DNS name as obtained by performing a reverse DNS lookup on $IP
$Dir - The session's current directory
$Disk - The local drive letter being accessed
$DFree - The amount of free space on $Disk in MB
$FUp -  The total number of files uploaded
$FDown -  The total number of files downloaded
$FTot -  The total number of files transferred, essentially ($FUp + $FDown)
$BUp -  The total number of kilobytes uploaded 
$Bdown -  The total number of kilobytes downloaded
$BTot -  The total number of kilobytes transferred
$TConM -  The total number of minutes the session has been connected
$TConS -  The number of seconds from 0 to 60 that the session has been connected, carries over to $TconM
$RatioUp -  The 'upload' portion of the applied ratio, "N/A" if not in use
$RatioDown -  The 'download' portion of the applied ratio, "N/A" if not in use
$RatioType - The type of ratio being applied, either per session or per User
$RatioCreditType - The type of ratio credit granted for transfers, either per bytes or per complete file
$RatioCredit -  The current transfer credit for the applied ratio, either megabytes or complete files
$QuotaUsed - Displays how much disk quota is currently being used in MB, "Unlimited" if no quota is in use
$QuotaLeft - Displays how much disk quota is available in MB, "Unlimited" if no quota is in use
$QuotaMax -  Displays the maximum amount of disk space that can be used in MB, "Unlimited" if no quota is in use
::END

$SYS_VARS_USER_INFO_LIST_FUTURE_FEATURE$::
$Name - The login ID of the attached User account
$LoginID - The session's login ID, operates like $Name. $Name can refer to the login ID for target user accounts but $LoginID refers only to the login ID of the session.
$IP - The client IP address
$IPName - The reverse DNS name as obtained by performing a reverse DNS lookup on $IP
$Dir - The session's current directory
$Disk - The local drive letter being accessed
$DFree - The amount of free space on $Disk in MB
$FUp -  The total number of files uploaded
$FDown -  The total number of files downloaded
$FTot -  The total number of files transferred, essentially ($FUp + $FDown)
$BUp -  The total number of kilobytes uploaded 
$Bdown -  The total number of kilobytes downloaded
$BTot -  The total number of kilobytes transferred
$TConM -  The total number of minutes the session has been connected
$TConS -  The number of seconds from 0 to 60 that the session has been connected, carries over to $TconM
$RatioUp -  The 'upload' portion of the applied ratio, "N/A" if not in use
$RatioDown -  The 'download' portion of the applied ratio, "N/A" if not in use
$RatioType - The type of ratio being applied, either per session or per User
$RatioCreditType - The type of ratio credit granted for transfers, either per bytes or per complete file
$RatioCredit -  The current transfer credit for the applied ratio, either megabytes or complete files
$QuotaUsed - Displays how much disk quota is currently being used in MB, "Unlimited" if no quota is in use
$QuotaLeft - Displays how much disk quota is available in MB, "Unlimited" if no quota is in use
$QuotaMax -  Displays the maximum amount of disk space that can be used in MB, "Unlimited" if no quota is in use
::END

$SYS_VARS_USER_INFO_NOTE$::
<strong>NOTE:</strong> Using the $IPName variable inside of an event or sign-on message can cause a slight delay while the reverse DNS information for $IP
is retrieved.
::END

$SYS_VARS_USER_INFO_8_0_LIST$::
$Protocol - The current protocol being used (FTP, FTPS, HTTP, HTTPS, or SFTP (SSH2))
$DomainName - The current domain that the session is logged into
$DomainDescription - The description of the current domain that the session is logged into
$TimeRemaining - The time remaining when blocking an IP address for an amount of time (available only in Event notifications)
::END

$SYS_VARS_USER_INFO_LIST_FUTURE$::
$LocalHomeDirectory - The local home directory. It should only be used for events that need this specific information such as user creation.
$Password -  The password associated with the user account.  It is intended only for events. It should NOT be used for welcome messages.
$UserEmailAddress - The user's email address.
$FullName - The user's full name as entered into the "Full Name" field for a user account.
$SpaceFullName - The same as "$FullName" with the addition of a space before the user's full name.  Blank (no space or name) when the user's full name is empty.
$FullNameSpace - The same as "$FullName" with the addition of a space after the user's full name.  Blank (no space or name) when the user's full name is empty.
::END


$SYS_VARS_FILE_INFO$=File Information - Applies to the last remotely accessed file, which is not necessarily the last transferred file
$SYS_VARS_FILE_INFO_LIST$::
$PathName - Retrieves the full remote path
$FileName - Retrieves just the filename from $PathName
$FileSize - Retrieves the size, in bytes, of the file from $FileName
::END

$SYS_VARS_FILE_INFO_8_0_LIST$::
$FileSizeFmt - A formatted version of the file size, containing the thousands separator (comma or period depending on the computer's regional settings)
$FileSizeKB - A formatted floating point value representing the file size in KB
$LocalPathName - Retrieves the fully qualified local path name for an operation, as it relates to Windows.  For example "C:\Temp\File.fid" instead of "/Temp/file.fid"
$LocalFileName - Retrieves the name of the file as it is stored on the local computer.  See $LocalPathName for details
$OldLocalPathName - Same as $LocalPathName, but contains the path prior to renaming
$OldLocalFileName - Same as $LocalFileName, but contains the file name prior to renaming
$OldPathName - Retrieves the remote path name prior to renaming
$OldFileName - Retrieves the remote file name prior to renaming
::END

$SYS_VARS_USAGE_STATS$=Current Activity
$SYS_VARS_USAGE_STATS_LIST$::
$UNow -  The current number of sessions on the Serv-U File Server
$UAll -  The total number of sessions that have connected to the Serv-U File Server since it was last started
$U24h -  The total number of sessions that have connected to the Serv-U File Server in the last 24 hours
$UAnonAll - The current number of sessions attributed to the anonymous user on the Serv-U File Server
$UAnonThisDomain  - The current number of sessions attributed to the anonymous user on the connected Domain
$UNonAnonAll  - The current number of sessions not attributed to the anonymous user on the Serv-U File Server
$UNonAnonThisDomain - The current number of sessions not attributed to the anonymous user on the connected Domain
$UThisName - The current number of sessions attributed to the connected User account
::END


<!-- NOTE TO TRANSLATORS: The following BLOCK MUST be removed from your translation -->
<!-- localized strings, keep these at the end of this file, they "overwrite" any previously defined string -->
<!--#include de "Help-Admin-Strings_DE.strings"-->
<!--#include fr "Help-Admin-Strings_FR.strings"-->
<!--#include it "Help-Admin-Strings_IT.strings"-->
<!--#include es "Help-Admin-Strings_ES.strings"-->
<!--#include zh,TW "Help-Admin-Strings_TW.strings"-->
<!--#include zh,CN "Help-Admin-Strings_CN.strings"-->
<!--#include jp "Help-Admin-Strings_JP.strings"-->
